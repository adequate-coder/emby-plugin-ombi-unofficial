<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emby.Media.Model</name>
    </assembly>
    <members>
        <member name="T:Emby.Media.Common.DataConversion.MediaStreamParser">
            <summary>
            Handles conversion of string values from ffmpeg outputs.
            </summary>
            <remarks>See example at the bottom.</remarks>
        </member>
        <member name="M:Emby.Media.Common.DataConversion.ParseHelper.EqualsNoCase(System.String,System.String)">
            <summary>Compare strings case insensitive.</summary>
            <param name="str1">The STR1.</param>
            <param name="str2">The STR2.</param>
            <returns>A boolean.</returns>
        </member>
        <member name="T:Emby.Media.Common.DataConversion.ParsingContext">
            <summary>Temporary class for recording parsing errors.</summary>
            <remarks>Can be removed later.</remarks>
        </member>
        <member name="M:Emby.Media.Common.DataConversion.ParsingContext.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Emby.Media.Common.DataConversion.ParsingContext.ParsingError.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Common.DataConversion.ProbeStreamParser">
            <summary>
            Handles conversion of string values from ffmpeg outputs.
            </summary>
            <remarks>See example at the bottom.</remarks>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetEnumId(System.Enum)">
            <summary>Gets an enum identifier like it would be used in code ('MyEnum.MyValue').</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetDescription(System.Enum)">
            <summary>Gets the content of an enum member's <see cref="T:System.ComponentModel.DescriptionAttribute"/>, or its name in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetDetails(System.Enum)">
            <summary>Gets the content of an enum member's <see cref="T:MediaBrowser.Model.Attributes.DetailsAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetOrdinal(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:MediaBrowser.Model.Attributes.OrdinalAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetChannelCount(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.ChannelCountAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetValue(System.Enum)">
            <summary>Gets the content of r the value property of an enum member's <see cref="T:MediaBrowser.Model.Attributes.ValueAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetBitsPerPixel(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.BitsPerPixelAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetBitDepth(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.BitDepthAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetBitDepths(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.BitDepthAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.SupportsBitDepth(System.Enum,System.Int32)">
            <summary>Checks whether an enum member supports a given bit depth (has a BitDepth attribute matching the provided bitDepth).</summary>
            <param name="enumValue">The enum value.</param>
            <param name="bitDepth">The bit depth.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetBitRate(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.MaxBitRateKAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetResRates(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.MaxResAndRateAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetIdTag(System.Enum)">
            <summary>Gets the value of an enum member's <see cref="T:Emby.Media.Model.Attributes.IdTagAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetMimeType(System.Enum)">
            <summary>Gets the first mime type of an enum member's <see cref="T:Emby.Media.Model.Attributes.MimeTypesAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetMimeTypes(System.Enum)">
            <summary>Gets all mime types of an enum member's <see cref="T:Emby.Media.Model.Attributes.MimeTypesAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetRelatedGuids(System.Enum)">
            <summary>Gets all guids of an enum member's <see cref="T:MediaBrowser.Model.Attributes.RelatedGuidAttribute"/>, or null in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetFirstRelatedGuid(System.Enum)">
            <summary>Gets the first guid of an enum member's <see cref="T:MediaBrowser.Model.Attributes.RelatedGuidAttribute"/>, or <see cref="F:System.Guid.Empty"/> in case there is none.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.CreateProfileInformation(System.Enum)">
            <summary>Creates a <see cref="T:Emby.Media.Model.Types.ProfileInformation"/> object for codec profile enum members based on attributes defined for this member.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.CreateLevelInformation(System.Enum)">
            <summary>Creates a <see cref="T:Emby.Media.Model.Types.LevelInformation"/> object for codec level enum members based on attributes defined for this member.</summary>
            <param name="enumValue">The enum value.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.FindByMimeType``1(``0,System.String)">
            <summary>Finds members of a specified enum that are having the specified mime type defined in by a <see cref="T:Emby.Media.Model.Attributes.MimeTypesAttribute"/>.</summary>
            <param name="enumType">Type of the enum to search.</param>
            <param name="mimeType">Mime type to search for.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.FindByAlias``1(System.String)">
            <summary>Finds members of a specified enum that are having the specified alias name defined in by a <see cref="T:MediaBrowser.Model.Attributes.AliasesAttribute"/>.</summary>
            <param name="aliasName">Alias name to search for.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.FindByRelatedGuid``1(``0,System.Guid)">
            <summary>Finds members of a specified enum that are having the specified related Guid type defined in by a <see cref="T:MediaBrowser.Model.Attributes.RelatedGuidAttribute"/>.</summary>
            <param name="enumType">Type of the enum to search.</param>
            <param name="relatedGuid">Related Guid to search for.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumExtensions.GetFirstAliasOrName(System.Enum)">
            <summary>Gets the first alias or otherwise the name of the enum entry.</summary>
            <param name="enumValue">The enum value.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumListExtensions.GetHighestOrdinal``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Gets the value of an enum collection having the maximum <see cref="T:MediaBrowser.Model.Attributes.OrdinalAttribute" /> value
            that is equal or less to the ordinal value of <paramref name="inclusiveMaximum"/>,
            or null in case there is none matching these conditions.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumList">The enum list.</param>
            <param name="inclusiveMaximum">The inclusive maximum.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.EnumListExtensions.GetAll``1(``0)">
            <summary>Returns all members of an enum as list.</summary>
            <param name="enumType">Type of the enum.</param>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.GetFriendlyString(System.Guid)">
            <summary>Gets a  shortend (friendly) string that is still supposed to be locally unique.</summary>
            <param name="guid">The unique identifier.</param>
            <returns>A shortend (friendly) string.</returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.PrefixWith(System.String,System.String)">
            <summary>Adds the specified prefix to a string if the string is non-empty.</summary>
            <param name="value">The string to prefix.</param>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.IsNotEmpty(System.String)">
            <summary>Checks whether the specified string is non-null and non-empty.</summary>
            <param name="value">The string to check.</param>
            <remarks>This is an inverted version of <see cref="M:System.String.IsNullOrEmpty(System.String)"/> to be used in Linq expressions.</remarks>
            <returns>A boolean.</returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.IsNullOrEmpty(System.String)">
            <summary>Checks whether the specified string is null or empty.</summary>
            <param name="value">The string to check.</param>
            <remarks>This is a 'fluent' version version of <see cref="M:System.String.IsNullOrEmpty(System.String)"/> to be used in Linq expressions.</remarks>
            <returns>A boolean.</returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.Capitalize(System.String)">
            <summary>Capitalizes the specified string.</summary>
            <param name="value">The string to capitalize.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.AsRational(Emby.Media.Model.Types.Resolution)">
            <summary>Creates a Rational from a Resolution.</summary>
            <param name="resolution">The resolution.</param>
            <returns>A <see cref="T:Emby.Media.Model.Types.Rational"/>.</returns>
            <remarks>Will throw when height is zero.</remarks>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.AsResolution(System.Drawing.Size)">
            <summary>Creates a Resolution from a Size.</summary>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Common.Extensions.Extensions.AsResolution(System.Nullable{System.Drawing.Size})">
            <summary>Creates a Resolution from a Size.</summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="T:Emby.Media.Common.Extensions.TimeSpanExtensions">
            <summary>
            The TimeSpanExtensions class.
            </summary>
        </member>
        <member name="T:Emby.Media.Common.Extensions.ValueExtensions">
            <summary>
            These extensions allow simple handling of certain types in code
            (currently <see cref="T:Emby.Media.Model.Types.BitRate"/> only).
            </summary>
            <remarks>See example at the bottom.</remarks>
        </member>
        <member name="M:Emby.Media.Common.Extensions.ValueExtensions.Sample(Emby.Media.Model.Types.BitRate)">
            <summary>Usage samples for above extensions.</summary>
        </member>
        <member name="T:Emby.Media.Model.Attributes.BitDepthAttribute">
            <summary>
            Attribute for specifying the bit depth (= the maximum bitness of a component/channel).
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.BitsPerPixelAttribute">
            <summary>
            Attribute for specifying a 'bits/pixel' value for enum entries.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.BitStreamAttribute">
            <summary>
            Attribute indicating that an enum value is applicable to bit-stream formats.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.ChannelCountAttribute">
            <summary>
            Attribute for specifying the number of channels for enum entries.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.CompressionAttribute">
            <summary>
            Attribute for specifying the kind of compression for a media format.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.HardwareAttribute">
            <summary>
            Attribute indicating that an enum value is related to hardware encoding.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.HdrBaseFormatsAttribute">
            <summary>
            Attribute for specifying the related <see cref="T:Emby.Media.Model.Enums.HdrBaseFormats"/>.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.IdTagAttribute">
            <summary>
            Attribute for specifying a tag string that is used for creating unique codec IDs.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.InputAttribute">
            <summary>
            Attribute indicating that an enum value is applicable to input formats.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.IntraFrameAttribute">
            <summary>
            Attribute indicating intra-frame capability of a media type.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.IsGraphicAttribute">
            <summary>
            Attribute for marking a subtitle codec format as graphical/image-based instead of text.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.IsHdrAttribute">
            <summary>
            Attribute for marking a color space or primary enum value as being HDR.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.MaxBitRateKAttribute">
            <summary>
            Attribute for specifying the maximum supported bit rate for an enum entry.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.MaxResAndRateAttribute">
            <summary>
            Attribute specifying a maximum supported combination of resolution and rate for an enum value.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Emby.Media.Model.Attributes.MaxResAndRateAttribute.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Attributes.MaxResAndRateAttribute"/> class.</summary>
            <param name="width">The resolution width.</param>
            <param name="height">The resolution height.</param>
            <param name="frameRate">The maximum frame rate for this resolution.</param>
        </member>
        <member name="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.Width">
            <summary>Gets the resolution width.</summary>
            <value>The resolution width.</value>
        </member>
        <member name="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.Height">
            <summary>Gets the resolution height.</summary>
            <value>The resolution height.</value>
        </member>
        <member name="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.FrameRate">
            <summary>Gets the maximum frame rate for the resolution.</summary>
            <value>The maximum frame rate.</value>
        </member>
        <member name="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.Resolution">
            <summary>Gets a <see cref="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.Resolution"/> value.</summary>
            <value>The resolution.</value>
        </member>
        <member name="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.ResolutionWithRate">
            <summary>Gets a <see cref="P:Emby.Media.Model.Attributes.MaxResAndRateAttribute.ResolutionWithRate"/> value.</summary>
            <value>The resolution with rate.</value>
        </member>
        <member name="T:Emby.Media.Model.Attributes.MimeTypesAttribute">
            <summary>
            Attribute for specifying one or more related mime types for a media type.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.NbCountAttribute">
            <summary>
            Attribute for specifying the NB count for color format enum entries.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.OutputAttribute">
            <summary>
            Attribute indicating that an enum value is applicable to output formats.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.PrimaryAttribute">
            <summary>
            Attribute for marking an enum entry as prominent or important.
            </summary>
            <remarks>This allows for example pushing certain entries to the top of a selection list
            or excluding non-primary items for simplified UX scenarios.</remarks>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Attributes.VideoMediaTypeAttribute">
            <summary>
            Attribute for specifying the related <see cref="T:Emby.Media.Model.Enums.VideoMediaTypes"/>.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Emby.Media.Model.Containers.StreamContainerBase">
            <summary>
            Stream container base class.
            </summary>
        </member>
        <member name="M:Emby.Media.Model.Containers.StreamContainerBase.#ctor(System.Collections.Generic.IEnumerable{Emby.Media.Model.Streams.StreamBase})">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Containers.StreamContainerBase"/> class.</summary>
            <param name="streams">The streams.</param>
        </member>
        <member name="M:Emby.Media.Model.Containers.StreamContainerBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Containers.StreamContainerBase"/> class.</summary>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.Protocol">
            <summary>Gets or sets the protocol.</summary>
            <value>The protocol.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.Url">
            <summary>Gets or sets the URL.</summary>
            <value>The URL.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.ContainerFormat">
            <summary>Gets or sets the container format.</summary>
            <value>The container format.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.Streams">
            <summary>Gets the streams.</summary>
            <value>The streams.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.VideoStreams">
            <summary>Gets the streams.</summary>
            <value>The streams.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.AudioStreams">
            <summary>Gets the streams.</summary>
            <value>The streams.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.SubtitleStreams">
            <summary>Gets the streams.</summary>
            <value>The streams.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.VideoStream0">
            <summary>Gets the video stream #0.</summary>
            <value>The video stream #0.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.AudioStream0">
            <summary>Gets the audio stream #0.</summary>
            <value>The audio stream #0.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.AudioStream1">
            <summary>Gets the audio stream #1.</summary>
            <value>The audio stream #1.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.SubtitleStream0">
            <summary>Gets the subtitle stream #0.</summary>
            <value>The subtitle stream #0.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerBase.SubtitleStream1">
            <summary>Gets the subtitle stream #1.</summary>
            <value>The subtitle stream #1.</value>
        </member>
        <member name="M:Emby.Media.Model.Containers.StreamContainerBase.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.Containers.StreamContainerInfo">
            <summary>
            Serialiazation model for StreamContainerBase
            </summary>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerInfo.Protocol">
            <summary>Gets or sets the protocol.</summary>
            <value>The protocol.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerInfo.Url">
            <summary>Gets or sets the URL.</summary>
            <value>The URL.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerInfo.ContainerFormat">
            <summary>Gets or sets the container format.</summary>
            <value>The container format.</value>
        </member>
        <member name="P:Emby.Media.Model.Containers.StreamContainerInfo.Streams">
            <summary>Gets the streams.</summary>
            <value>The streams.</value>
        </member>
        <member name="M:Emby.Media.Model.Containers.TvChannelStreams.#ctor(System.Collections.Generic.IEnumerable{Emby.Media.Model.Streams.StreamBase})">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Containers.TvChannelStreams"/> class.</summary>
            <param name="streams">The streams.</param>
        </member>
        <member name="M:Emby.Media.Model.Containers.TvChannelStreams.#ctor(System.Collections.Generic.IEnumerable{Emby.Media.Model.Streams.StreamBase},Emby.Media.Model.Containers.TvChannelStreams)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Containers.TvChannelStreams" /> class.</summary>
            <param name="streams">The streams.</param>
            <param name="cloneFrom">Container to copy properties from.</param>
        </member>
        <member name="M:Emby.Media.Model.Containers.TvChannelStreams.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Containers.TvChannelStreams"/> class.</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.AudioMediaTypes">
            <summary>
            Enum listing audio media types.
            </summary>
            <remarks>
            The enum member names are matching exactly those that are used by ffmpeg.
            Exception: Items that are starting with a number are prefixed with an underscore here.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes._4gv">
            <summary>4GV (Fourth Generation Vocoder)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes._8svx_exp">
            <summary>8SVX exponential</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes._8svx_fib">
            <summary>8SVX fibonacci</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.aac">
            <summary>AAC (Advanced Audio Coding)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.aac_latm">
            <summary>AAC LATM (Advanced Audio Coding LATM syntax)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ac3">
            <summary>ATSC A/52A (AC-3)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ac4">
            <summary>AC-4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_4xm">
            <summary>ADPCM 4X Movie</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_adx">
            <summary>SEGA CRI ADX ADPCM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_afc">
            <summary>ADPCM Nintendo Gamecube AFC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_aica">
            <summary>ADPCM Yamaha AICA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ct">
            <summary>ADPCM Creative Technology</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_dtk">
            <summary>ADPCM Nintendo Gamecube DTK</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ea">
            <summary>ADPCM Electronic Arts</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ea_maxis_xa">
            <summary>ADPCM Electronic Arts Maxis CDROM XA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ea_r1">
            <summary>ADPCM Electronic Arts R1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ea_r2">
            <summary>ADPCM Electronic Arts R2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ea_r3">
            <summary>ADPCM Electronic Arts R3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ea_xas">
            <summary>ADPCM Electronic Arts XAS</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_g722">
            <summary>G.722 ADPCM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_g726">
            <summary>G.726 ADPCM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_g726le">
            <summary>G.726 ADPCM little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_amv">
            <summary>ADPCM IMA AMV</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_apc">
            <summary>ADPCM IMA CRYO APC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_dat4">
            <summary>ADPCM IMA Eurocom DAT4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_dk3">
            <summary>ADPCM IMA Duck DK3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_dk4">
            <summary>ADPCM IMA Duck DK4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_ea_eacs">
            <summary>ADPCM IMA Electronic Arts EACS</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_ea_sead">
            <summary>ADPCM IMA Electronic Arts SEAD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_iss">
            <summary>ADPCM IMA Funcom ISS</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_oki">
            <summary>ADPCM IMA Dialogic OKI</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_qt">
            <summary>ADPCM IMA QuickTime</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_rad">
            <summary>ADPCM IMA Radical</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_smjpeg">
            <summary>ADPCM IMA Loki SDL MJPEG</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_wav">
            <summary>ADPCM IMA WAV</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ima_ws">
            <summary>ADPCM IMA Westwood</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_ms">
            <summary>ADPCM Microsoft</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_mtaf">
            <summary>ADPCM MTAF</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_psx">
            <summary>ADPCM Playstation</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_sbpro_2">
            <summary>ADPCM Sound Blaster Pro 2-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_sbpro_3">
            <summary>ADPCM Sound Blaster Pro 2.6-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_sbpro_4">
            <summary>ADPCM Sound Blaster Pro 4-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_swf">
            <summary>ADPCM Shockwave Flash</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_thp">
            <summary>ADPCM Nintendo THP</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_thp_le">
            <summary>ADPCM Nintendo THP (Little-Endian)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_vima">
            <summary>LucasArts VIMA audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_xa">
            <summary>ADPCM CDROM XA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.adpcm_yamaha">
            <summary>ADPCM Yamaha</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.alac">
            <summary>ALAC (Apple LossLess Audio Codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.amr_nb">
            <summary>AMR-NB (Adaptive Multi-Rate NarrowBand)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.amr_wb">
            <summary>AMR-WB (Adaptive Multi-Rate WideBand)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ape">
            <summary>Monkey's Audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.aptx">
            <summary>aptX (Audio Processing Technology for Bluetooth)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.aptx_hd">
            <summary>aptX HD (Audio Processing Technology for Bluetooth)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.atrac1">
            <summary>ATRAC1 (Adaptive TRansform Acoustic Coding)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.atrac3">
            <summary>ATRAC3 (Adaptive TRansform Acoustic Coding 3)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.atrac3al">
            <summary>ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced LossLess)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.atrac3p">
            <summary>ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.atrac3pal">
            <summary>ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced LossLess)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.avc">
            <summary>On2 Audio for Video Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.binkaudio_dct">
            <summary>Bink Audio (DCT)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.binkaudio_rdft">
            <summary>Bink Audio (RDFT)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.bmv_audio">
            <summary>Discworld II BMV audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.celt">
            <summary>Constrained Energy Lapped Transform (CELT)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.codec2">
            <summary>codec2 (very low bitrate speech codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.comfortnoise">
            <summary>RFC 3389 Comfort Noise</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.cook">
            <summary>Cook / Cooker / Gecko (RealAudio G2)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dolby_e">
            <summary>Dolby E</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dsd_lsbf">
            <summary>DSD (Direct Stream Digital), least significant bit first</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dsd_lsbf_planar">
            <summary>DSD (Direct Stream Digital), least significant bit first, planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dsd_msbf">
            <summary>DSD (Direct Stream Digital), most significant bit first</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dsd_msbf_planar">
            <summary>DSD (Direct Stream Digital), most significant bit first, planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dsicinaudio">
            <summary>Delphine Software International CIN audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dss_sp">
            <summary>Digital Speech Standard - Standard Play mode (DSS SP)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dst">
            <summary>DST (Direct Stream Transfer)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dts">
            <summary>DCA (DTS Coherent Acoustics)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dvaudio">
            <summary>DV audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.eac3">
            <summary>ATSC A/52B (AC-3, E-AC-3)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.evrc">
            <summary>EVRC (Enhanced Variable Rate Codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.flac">
            <summary>FLAC (Free LossLess Audio Codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.g723_1">
            <summary>G.723.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.g729">
            <summary>G.729</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.gremlin_dpcm">
            <summary>DPCM Gremlin</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.gsm">
            <summary>GSM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.gsm_ms">
            <summary>GSM Microsoft variant</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.iac">
            <summary>IAC (Indeo Audio Coder)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ilbc">
            <summary>iLBC (Internet Low Bitrate Codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.imc">
            <summary>IMC (Intel Music Coder)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.interplay_dpcm">
            <summary>DPCM Interplay</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.interplayacm">
            <summary>Interplay ACM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mace3">
            <summary>MACE (Macintosh Audio Compression/Expansion) 3:1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mace6">
            <summary>MACE (Macintosh Audio Compression/Expansion) 6:1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.metasound">
            <summary>Voxware MetaSound</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mlp">
            <summary>MLP (Meridian LossLess Packing)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mp1">
            <summary>MP1 (MPEG audio layer 1)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mp2">
            <summary>MP2 (MPEG audio layer 2)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mp3">
            <summary>MP3 (MPEG audio layer 3)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mp3adu">
            <summary>ADU (Application Data Unit) MP3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mp3on4">
            <summary>MP3onMP4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.mp4als">
            <summary>MPEG-4 Audio LossLess Coding (ALS)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.musepack7">
            <summary>Musepack SV7</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.musepack8">
            <summary>Musepack SV8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.nellymoser">
            <summary>Nellymoser Asao</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.opus">
            <summary>Opus (Opus Interactive Audio Codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.paf_audio">
            <summary>Amazing Studio Packed Animation File Audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_alaw">
            <summary>PCM A-law / G.711 A-law</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_bluray">
            <summary>PCM signed 16|20|24-bit big-endian for Blu-ray media</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_dvd">
            <summary>PCM signed 20|24-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_f16le">
            <summary>PCM 16.8 floating point little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_f24le">
            <summary>PCM 24.0 floating point little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_f32be">
            <summary>PCM 32-bit floating point big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_f32le">
            <summary>PCM 32-bit floating point little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_f64be">
            <summary>PCM 64-bit floating point big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_f64le">
            <summary>PCM 64-bit floating point little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_lxf">
            <summary>PCM signed 20-bit little-endian planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_mulaw">
            <summary>PCM mu-law / G.711 mu-law</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s16be">
            <summary>PCM signed 16-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s16be_planar">
            <summary>PCM signed 16-bit big-endian planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s16le">
            <summary>PCM signed 16-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s16le_planar">
            <summary>PCM signed 16-bit little-endian planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s24be">
            <summary>PCM signed 24-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s24daud">
            <summary>PCM D-Cinema audio signed 24-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s24le">
            <summary>PCM signed 24-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s24le_planar">
            <summary>PCM signed 24-bit little-endian planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s32be">
            <summary>PCM signed 32-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s32le">
            <summary>PCM signed 32-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s32le_planar">
            <summary>PCM signed 32-bit little-endian planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s64be">
            <summary>PCM signed 64-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s64le">
            <summary>PCM signed 64-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s8">
            <summary>PCM signed 8-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_s8_planar">
            <summary>PCM signed 8-bit planar</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u16be">
            <summary>PCM unsigned 16-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u16le">
            <summary>PCM unsigned 16-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u24be">
            <summary>PCM unsigned 24-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u24le">
            <summary>PCM unsigned 24-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u32be">
            <summary>PCM unsigned 32-bit big-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u32le">
            <summary>PCM unsigned 32-bit little-endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_u8">
            <summary>PCM unsigned 8-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.pcm_zork">
            <summary>PCM Zork</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.qcelp">
            <summary>QCELP / PureVoice</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.qdm2">
            <summary>QDesign Music Codec 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.qdmc">
            <summary>QDesign Music</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ra_144">
            <summary>RealAudio 1.0 (14.4K)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ra_288">
            <summary>RealAudio 2.0 (28.8K))</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ralf">
            <summary>RealAudio LossLess</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.roq_dpcm">
            <summary>DPCM id RoQ</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.s302m">
            <summary>SMPTE 302M</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.sbc">
            <summary>SBC (low-complexity subband codec)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.sdx2_dpcm">
            <summary>DPCM Squareroot-Delta-Exact</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.shorten">
            <summary>Shorten</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.sipr">
            <summary>RealAudio SIPR / ACELP.NET</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.smackaudio">
            <summary>Smacker audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.smv">
            <summary>SMV (Selectable Mode Vocoder)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.sol_dpcm">
            <summary>DPCM Sol</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.sonic">
            <summary>Sonic</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.sonicls">
            <summary>Sonic LossLess</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.speex">
            <summary>Speex</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.tak">
            <summary>TAK (Tom's LossLess Audio Kompressor)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.truehd">
            <summary>TrueHD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.truespeech">
            <summary>DSP Group TrueSpeech</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.tta">
            <summary>TTA (True Audio)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.twinvq">
            <summary>VQF TwinVQ</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.vmdaudio">
            <summary>Sierra VMD audio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.vorbis">
            <summary>Vorbis</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wavesynth">
            <summary>Wave synthesis pseudo-codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wavpack">
            <summary>WavPack</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.westwood_snd1">
            <summary>Westwood Audio (SND1)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wmaLossless">
            <summary>Windows Media Audio LossLess</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wmapro">
            <summary>Windows Media Audio 9 Professional</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wmav1">
            <summary>Windows Media Audio 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wmav2">
            <summary>Windows Media Audio 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.wmavoice">
            <summary>Windows Media Audio Voice</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.xan_dpcm">
            <summary>DPCM Xan</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.xma1">
            <summary>Xbox Media Audio 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.xma2">
            <summary>Xbox Media Audio 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.bin_data">
            <summary>binary data</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.dvd_nav_packet">
            <summary>DVD Nav packet</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.klv">
            <summary>SMPTE 336M Key-Length-Value (KLV) metadata</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.otf">
            <summary>OpenType font</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.scte_35">
            <summary>SCTE 35 Message Queue</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.timed_id3">
            <summary>timed ID3 metadata</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AudioMediaTypes.ttf">
            <summary>TrueType font</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.ChannelLayouts">
            <summary>
            Enum listing Audio channel layouts.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutMono">
            <summary>mono</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutStereo">
            <summary>stereo</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout2Point1">
            <summary>2.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutSurround">
            <summary>3.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout21">
            <summary>3.0(back)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout4Point0">
            <summary>4.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutQuad">
            <summary>quad</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout22">
            <summary>quad(side)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout3Point1">
            <summary>3.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout5Point0Back">
            <summary>5.0(back)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout5Point0">
            <summary>5.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout4Point1">
            <summary>4.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout5Point1Back">
            <summary>5.1(back)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout5Point1">
            <summary>5.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout6Point0">
            <summary>6.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout6Point0Front">
            <summary>6.0(front)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutHexagonal">
            <summary>hexagonal</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout6Point1">
            <summary>6.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout6Point1Back">
            <summary>6.1(back)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout6Point1Front">
            <summary>6.1(front)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout7Point0">
            <summary>7.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout7Point0Front">
            <summary>7.0(front)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout7Point1">
            <summary>7.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout7Point1WideBack">
            <summary>7.1(wide)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.Layout7Point1Wide">
            <summary>7.1(wide-side)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutOctagonal">
            <summary>octagonal</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutHexadecagonal">
            <summary>hexadecagonal</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutStereoDownmix">
            <summary>downmix</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutSpecial1">
            <summary>2 channels (FC+LFE)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutSpecial2">
            <summary>4 channels (FL+FR+LFE+BC)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutSpecial3">
            <summary>5 channels (FL+FR+LFE+SL+SR)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ChannelLayouts.LayoutSpecial4">
            <summary>5 channels (FL+FR+LFE+BL+BR)</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.SampleFormats">
            <summary>
            Audio sample format.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.NONE">
            <summary>No sample format.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.U8">
            <summary>unsigned 8 bits   .</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.S16">
            <summary>signed 16 bits.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.S32">
            <summary>signed 32 bits.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.FLT">
            <summary>float format.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.DBL">
            <summary>double format.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.U8P">
            <summary>unsigned 8 bits, planar.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.S16P">
            <summary>signed 16 bits, planar.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.S32P">
            <summary>signed 32 bits, planar.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.FLTP">
            <summary>float, planar.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.DBLP">
            <summary>double, planar.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.S64">
            <summary>signed 64 bits.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleFormats.S64P">
            <summary>signed 64 bits, planar.</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.SampleRates">
            <summary>
            Enum listing sample rates.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.SrUnknown">
            <summary>Unknown Sample Rate</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr7350">
            <summary>Sample Rate 7350 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr8000">
            <summary>Sample Rate 8000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr11025">
            <summary>Sample Rate 11025 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr12000">
            <summary>Sample Rate 12000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr16000">
            <summary>Sample Rate 16000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr22050">
            <summary>Sample Rate 22050 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr24000">
            <summary>Sample Rate 24000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr32000">
            <summary>Sample Rate 32000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr64000">
            <summary>Sample Rate 64000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr44100">
            <summary>Sample Rate 44100 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr48000">
            <summary>Sample Rate 48000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr88200">
            <summary>Sample Rate 88200 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr96000">
            <summary>Sample Rate 96000 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr176400">
            <summary>Sample Rate 176400 Hz</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SampleRates.Sr192000">
            <summary>Sample Rate 192000 Hz</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.CodecDirections">
            <summary>
            Enum for indicating the processing direction of a codec.
            </summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.CodecKinds">
            <summary>
            Enum defining the kind of media a codec is processing.
            </summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.CompressionKinds">
            <summary>
            Enum defining compression capabilities.
            </summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.Endian">
            <summary>
            Endian type.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Endian.Unspecified">
            <summary>The unspecified</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Endian.BigEndian">
            <summary>The big endian</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Endian.LittleEndian">
            <summary>The little endian</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.HardwareContexts">
            <summary>
            Enum defining hardware contexts in ffmpeg.
            </summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.AttachmentTypes">
            <summary>
            Enum listing attachment stream types.
            </summary>
            <remarks>
            The enum member names are matching those that are used by ffmpeg.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.AttachmentTypes.ttf">
            <summary>A TrueType font.</summary>
            <remarks>ffmpeg: AV_CODEC_ID_TTF</remarks>>
        </member>
        <member name="F:Emby.Media.Model.Enums.AttachmentTypes.otf">
            <summary>An OpenType font.</summary>
            <remarks>ffmpeg: AV_CODEC_ID_OTF</remarks>>
        </member>
        <member name="T:Emby.Media.Model.Enums.SecondaryFrameworks">
            <summary>
            Enum defining secondary frameworks for encoding and decoding.
            </summary>
            <remarks>While most of these are hardware acceleration frameworks, this is not a necessity
            (e.g. Android MediaCodec offers software codecs as well).</remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.AmdAmf">
            <summary>AMD AMF</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.MediaCodec">
            <summary>Android MediaCodec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.NvEncDec">
            <summary>Nvidia NVENC/NVDEC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.OpenMax">
            <summary>OpenMAX OMX</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.QuickSync">
            <summary>Intel Quick Sync</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.VaApi">
            <summary>Video Acceleration API</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.V4L2">
            <summary>V4L2 MFC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.DxVa">
            <summary>DirectX Video Acceleration DXVA2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.D3d11va">
            <summary>DirectX 11 Video Acceleration</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.VideoToolbox">
            <summary>VideoToolbox</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SecondaryFrameworks.Mmal">
            <summary>Multi-Media Abstraction Layer</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.SubtitleFormats">
            <summary>
            Option type.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleFormats.Unknown">
            <summary>A string option.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleFormats.Bitmap">
            <summary>Bitmap subtitle format.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleFormats.Text">
            <summary>Text subtitle format.</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleFormats.Ass">
            <summary>ASS subtitle format.</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.SubtitleMediaTypes">
            <summary>
            Enum listing subtitle media types.
            </summary>
            <remarks>
            The enum member names are matching exactly those that are used by ffmpeg.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.Unknown">
            <summary>
            Unknown subtitle media type.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.ass">
            <summary>
            ASS (Advanced SSA) subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.dvb_subtitle">
            <summary>
            DVB subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.dvb_teletext">
            <summary>
            DVB teletext.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.dvd_subtitle">
            <summary>
            DVD subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.eia_608">
            <summary>
            EIA-608 closed captions.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.hdmv_pgs_subtitle">
            <summary>
            HDMV PGS subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.hdmv_text_subtitle">
            <summary>
            HDMV Text subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.jacosub">
            <summary>
            JACOsub subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.microdvd">
            <summary>
            MicroDVD subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.mov_text">
            <summary>
            MOV text subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.mpl2">
            <summary>
            MPL2 subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.pjs">
            <summary>
            PJS subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.realtext">
            <summary>
            RealText subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.sami">
            <summary>
            SAMI subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.srt">
            <summary>
            SubRip subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.ssa">
            <summary>
            SSA (SubStation Alpha) subtitle.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.stl">
            <summary>
            Spruce subtitle format.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.subrip">
            <summary>
            SubRip subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.subviewer">
            <summary>
            SubViewer subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.subviewer1">
            <summary>
            SubViewer v1 subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.text">
            <summary>
            raw UTF-8 text subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.vplayer">
            <summary>
            VPlayer subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.webvtt">
            <summary>
            WebVTT subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.xsub">
            <summary>
            XSUB subtitles.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.ttml">
            <summary>
            Timed Text Metadata.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.SubtitleMediaTypes.arib_caption">
            <summary>
            ARIB STD-B24 caption.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel1">
            <summary>Level 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel1b">
            <summary>Level 1b</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel11">
            <summary>Level 1.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel12">
            <summary>Level 1.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel13">
            <summary>Level 1.3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel2">
            <summary>Level 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel21">
            <summary>Level 2.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel22">
            <summary>Level 2.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel3">
            <summary>Level 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel31">
            <summary>Level 3.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel32">
            <summary>Level 3.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel4">
            <summary>Level 4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel41">
            <summary>Level 4.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel42">
            <summary>Level 4.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel5">
            <summary>Level 5</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel51">
            <summary>Level 5.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel52">
            <summary>Level 5.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel6">
            <summary>Level 6</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel61">
            <summary>Level 6.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcLevels.AvcLevel62">
            <summary>Level 6.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level10">
            <summary>Level 10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level20">
            <summary>Level 20</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level30">
            <summary>Level 30</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level40">
            <summary>Level 40</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level45">
            <summary>Level 45</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level50">
            <summary>Level 50</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level60">
            <summary>Level 60</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Levels.H263Level70">
            <summary>Level 70</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.HevcLevels">
            <summary>
            H.265 levels according to T-REC-H.265 Annex A.
            </summary>
            <remarks>
                Attention: ffprobe returns the integer values according to the H.265 spec: The decimal level multiplied by 30.
                That means: 153 = 5.1 and 60 = 2.0 (not 6.0!).
                Opposed to that, libx265 takes values as decimal or multiplied by 10, e.g. 6.0 = 60 (6 is not allowed)
                To avoid disambiguity, we use decimal values at the 'output side' (Value attributes) and at the parsing side,
                we use decimals (allowing round-trip) and integer values (times 30), because that's we have in the database (from ffprobe).
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel1">
            <summary>Level 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel2">
            <summary>Level 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel21">
            <summary>Level 2.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel3">
            <summary>Level 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel31">
            <summary>Level 3.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel4">
            <summary>Level 4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel41">
            <summary>Level 4.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel5">
            <summary>Level 5</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel51">
            <summary>Level 5.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel52">
            <summary>Level 5.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel6">
            <summary>Level 6</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel61">
            <summary>Level 6.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcLevels.HevcLevel62">
            <summary>Level 6.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Levels.Mpeg2LevelLL">
            <summary>Low Level</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Levels.Mpeg2LevelML">
            <summary>Main Level</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Levels.Mpeg2LevelH14">
            <summary>High 1440 Level</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Levels.Mpeg2LevelHL">
            <summary>High Level</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level0">
            <summary>Level 0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level0b">
            <summary>Level 0b</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level1">
            <summary>Level 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level2">
            <summary>Level 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level3">
            <summary>Level 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level4">
            <summary>Level 4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level4a">
            <summary>Level 4a</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level5">
            <summary>Level 5</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Levels.Mpeg4Level6">
            <summary>Level 6</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelLow">
            <summary>Low</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelMedian">
            <summary>Median</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelHigh">
            <summary>High</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelAdv0">
            <summary>Advanced 0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelAdv1">
            <summary>Advanced 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelAdv2">
            <summary>Advanced 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelAdv3">
            <summary>Advanced 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Levels.Vc1LevelAdv4">
            <summary>Advanced 4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp8Levels.Vp8levelDefault">
            <summary>Default Level</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level1">
            <summary>Level 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level11">
            <summary>Level 1.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level2">
            <summary>Level 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level21">
            <summary>Level 2.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level3">
            <summary>Level 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level31">
            <summary>Level 3.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level4">
            <summary>Level 4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level41">
            <summary>Level 4.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level5">
            <summary>Level 5</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level51">
            <summary>Level 5.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level52">
            <summary>Level 5.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level6">
            <summary>Level 6</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level61">
            <summary>Level 6.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Levels.Vp9Level62">
            <summary>Level 6.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level20">
            <summary>Level 2.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level21">
            <summary>Level 2.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level30">
            <summary>Level 3.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level31">
            <summary>Level 3.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level40">
            <summary>Level 4.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level41">
            <summary>Level 4.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level50">
            <summary>Level 5.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level51">
            <summary>Level 5.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level52">
            <summary>Level 5.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level53">
            <summary>Level 5.3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level60">
            <summary>Level 6.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level61">
            <summary>Level 6.1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level62">
            <summary>Level 6.2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Levels.Av1Level63">
            <summary>Level 6.3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.ultrafast">
            <summary>Ultrafast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.superfast">
            <summary>Superfast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.veryfast">
            <summary>Veryfast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.faster">
            <summary>Faster</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.fast">
            <summary>Fast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.medium">
            <summary>Medium</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.slow">
            <summary>Slow</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.slower">
            <summary>Slower</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcPresets.veryslow">
            <summary>Veryslow</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.ultrafast">
            <summary>Ultrafast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.superfast">
            <summary>Superfast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.veryfast">
            <summary>Veryfast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.faster">
            <summary>Faster</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.fast">
            <summary>Fast</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.medium">
            <summary>Medium</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.slow">
            <summary>Slow</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.slower">
            <summary>Slower</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.veryslow">
            <summary>Veryslow</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcPresets.placebo">
            <summary>Placebo</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.ColorFormats">
            <summary>
            Enum listing color formats.
            </summary>
            <remarks>
            The enum member names are matching those that are used by ffmpeg.
            (execute 'ffmpeg -pix_fmts' to list them)
            Exception: Items that are starting with a number are prefixed with an underscore here.
            In ffmpeg code these are prefixed with 'AV_PIX_FMT_' and all-caps.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv420p">
            <summary>YUV420P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuyv422">
            <summary>YUYV422</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb24">
            <summary>RGB24</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr24">
            <summary>BGR24</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv422p">
            <summary>YUV422P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv444p">
            <summary>YUV444P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv410p">
            <summary>YUV410P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv411p">
            <summary>YUV411P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gray">
            <summary>GRAY8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.monow">
            <summary>MONOWHITE</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.monob">
            <summary>MONOBLACK</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.pal8">
            <summary>PAL8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuvj420p">
            <summary>YUVJ420P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuvj422p">
            <summary>YUVJ422P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuvj444p">
            <summary>YUVJ444P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.uyvy422">
            <summary>UYVY422</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.uyyvyy411">
            <summary>UYYVYY411</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr8">
            <summary>BGR8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr4">
            <summary>BGR4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr4_byte">
            <summary>BGR4_BYTE</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb8">
            <summary>RGB8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb4">
            <summary>RGB4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb4_byte">
            <summary>RGB4_BYTE</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.nv12">
            <summary>NV12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.nv21">
            <summary>NV21</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.argb">
            <summary>ARGB</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgba">
            <summary>RGBA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.abgr">
            <summary>ABGR</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgra">
            <summary>BGRA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gray16">
            <summary>GRAY16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv440p">
            <summary>YUV440P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuvj440p">
            <summary>YUVJ440P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva420p">
            <summary>YUVA420P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb48">
            <summary>RGB48</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb565">
            <summary>RGB565</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb555">
            <summary>RGB555</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr565">
            <summary>BGR565</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr555">
            <summary>BGR555</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.vaapi_moco">
            <summary>VAAPI_MOCO</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.vaapi_idct">
            <summary>VAAPI_IDCT</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.vaapi_vld">
            <summary>VAAPI_VLD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv420p16">
            <summary>YUV420P16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv422p16">
            <summary>YUV422P16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv444p16">
            <summary>YUV444P16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.dxva2_vld">
            <summary>DXVA2_VLD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb444">
            <summary>RGB444</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr444">
            <summary>BGR444</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.ya8">
            <summary>YA8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr48">
            <summary>BGR48</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv420p9">
            <summary>YUV420P9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv420p10">
            <summary>YUV420P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv422p10">
            <summary>YUV422P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv444p9">
            <summary>YUV444P9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv444p10">
            <summary>YUV444P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv422p9">
            <summary>YUV422P9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrp">
            <summary>GBRP</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrp9">
            <summary>GBRP9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrp10">
            <summary>GBRP10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrp16">
            <summary>GBRP16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva422p">
            <summary>YUVA422P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva444p">
            <summary>YUVA444P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva420p9">
            <summary>YUVA420P9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva422p9">
            <summary>YUVA422P9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva444p9">
            <summary>YUVA444P9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva420p10">
            <summary>YUVA420P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva422p10">
            <summary>YUVA422P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva444p10">
            <summary>YUVA444P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva420p16">
            <summary>YUVA420P16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva422p16">
            <summary>YUVA422P16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva444p16">
            <summary>YUVA444P16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.vdpau">
            <summary>VDPAU</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.xyz12">
            <summary>XYZ12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.nv16">
            <summary>NV16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.nv20">
            <summary>NV20</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgba64">
            <summary>RGBA64</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgra64">
            <summary>BGRA64</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yvyu422">
            <summary>YVYU422</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.ya16">
            <summary>YA16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrap">
            <summary>GBRAP</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrap16">
            <summary>GBRAP16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.qsv">
            <summary>QSV</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.mmal">
            <summary>MMAL</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.d3d11va_vld">
            <summary>D3D11VA_VLD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.cuda">
            <summary>CUDA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats._0rgb">
            <summary>0RGB</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.rgb0">
            <summary>RGB0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats._0bgr">
            <summary>0BGR</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bgr0">
            <summary>BGR0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv420p12">
            <summary>YUV420P12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv420p14">
            <summary>YUV420P14</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv422p12">
            <summary>YUV422P12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv422p14">
            <summary>YUV422P14</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv444p12">
            <summary>YUV444P12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv444p14">
            <summary>YUV444P14</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrp12">
            <summary>GBRP12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrp14">
            <summary>GBRP14</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuvj411p">
            <summary>YUVJ411P</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_bggr8">
            <summary>BAYER_BGGR8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_rggb8">
            <summary>BAYER_RGGB8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_gbrg8">
            <summary>BAYER_GBRG8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_grbg8">
            <summary>BAYER_GRBG8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_bggr16">
            <summary>BAYER_BGGR16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_rggb16">
            <summary>BAYER_RGGB16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_gbrg16">
            <summary>BAYER_GBRG16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.bayer_grbg16">
            <summary>BAYER_GRBG16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.xvmc">
            <summary>XVMC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv440p10">
            <summary>YUV440P10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuv440p12">
            <summary>YUV440P12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.ayuv64">
            <summary>AYUV64</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.videotoolbox_vld">
            <summary>VIDEOTOOLBOX</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.p010">
            <summary>P010</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrap12">
            <summary>GBRAP12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrap10">
            <summary>GBRAP10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.mediacodec">
            <summary>MEDIACODEC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gray12">
            <summary>GRAY12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gray10">
            <summary>GRAY10</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gray14">
            <summary>GRAY14</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.p016">
            <summary>P016</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.d3d11">
            <summary>D3D11</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gray9">
            <summary>GRAY9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrpf32">
            <summary>GBRPF32</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.gbrapf32">
            <summary>GBRAPF32</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.drm_prime">
            <summary>DRM_PRIME</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.opencl">
            <summary>OPENCL</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.grayf32">
            <summary>GRAYF32</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva422p12">
            <summary>YUVA422P12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.yuva444p12">
            <summary>YUVA422P12</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.nv24">
            <summary>NV24</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorFormats.nv42">
            <summary>NV42</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.ColorPrimaries">
            <summary>
            Enum listing Chromaticity coordinates of the source primaries.
            </summary>
            <remarks>
            The enum member names are matching those that are used by ffmpeg,
            which are based on ISO/IEC 23001-8_2013 § 7.1.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.reserved0">
            <summary>reserved0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.bt709">
            <summary>also ITU-R BT1361 / IEC 61966-2-4 / SMPTE RP177 Annex B</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.unspecified">
            <summary>unspecified</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.reserved">
            <summary>reserved</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.bt470m">
            <summary>also FCC Title 47 Code of Federal Regulations 73.682 (a)(20)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.bt470bg">
            <summary>also ITU-R BT601-6 625 / ITU-R BT1358 625 / ITU-R BT1700 625 PAL &amp; SECAM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.smpte170m">
            <summary>also ITU-R BT601-6 525 / ITU-R BT1358 525 / ITU-R BT1700 NTSC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.smpte240m">
            <summary>functionally identical to above</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.film">
            <summary>colour filters using Illuminant C</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.bt2020">
            <summary>ITU-R BT2020</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.smpte428">
            <summary>SMPTE ST 428-1 (CIE 1931 XYZ)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.smpte431">
            <summary>SMPTE ST 431-2 (2011) / DCI P3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.smpte432">
            <summary>SMPTE ST 432-1 (2010) / P3 D65 / Display P3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorPrimaries.jedec_p22">
            <summary>JEDEC P22 phosphors</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.ColorSpaces">
            <summary>
            Enum listing YUV colorspace types.
            </summary>
            <remarks>
            The enum member names are matching those that are used by ffmpeg,
            which are based on ISO/IEC 23001-8_2013 § 7.3.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.rgb">
            <summary>order of coefficients is actually GBR, also IEC 61966-2-1 (sRGB)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.bt709">
            <summary>also ITU-R BT1361 / IEC 61966-2-4 xvYCC709 / SMPTE RP177 Annex B</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.unspecified">
            <summary>unspecified</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.reserved">
            <summary>reserved</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.fcc">
            <summary>FCC Title 47 Code of Federal Regulations 73.682 (a)(20)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.bt470bg">
            <summary>also ITU-R BT601-6 625 / ITU-R BT1358 625 / ITU-R BT1700 625 PAL &amp; SECAM / IEC 61966-2-4 xvYCC601</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.smpte170m">
            <summary>also ITU-R BT601-6 525 / ITU-R BT1358 525 / ITU-R BT1700 NTSC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.smpte240m">
            <summary>functionally identical to above</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.ycgco">
            <summary>Used by Dirac / VC-2 and H.264 FRext, see ITU-T SG16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.bt2020_ncl">
            <summary>ITU-R BT2020 non-constant luminance system</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.bt2020_cl">
            <summary>ITU-R BT2020 constant luminance system</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.smpte2085">
            <summary>SMPTE 2085, Y'D'zD'x</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.chroma_derived_ncl">
            <summary>Chromaticity-derived non-constant luminance system</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.chroma_derived_cl">
            <summary>Chromaticity-derived constant luminance system</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorSpaces.ictcp">
            <summary>ITU-R BT.2100-0, ICtCp</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.ColorTransfers">
            <summary>
            Enum listing Color Transfer Characteristics.
            </summary>
            <remarks>
            The enum member names are matching those that are used by ffmpeg,
            which are bases on ISO/IEC 23001-8_2013 § 7.2.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.reserved0">
            <summary>reserved</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.bt709">
            <summary>also ITU-R BT1361</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.unspecified">
            <summary>unspecified</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.reserved">
            <summary>reserved</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.gamma22">
            <summary>also ITU-R BT470M / ITU-R BT1700 625 PAL &amp; SECAM</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.gamma28">
            <summary>also ITU-R BT470BG</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.smpte170m">
            <summary>also ITU-R BT601-6 525 or 625 / ITU-R BT1358 525 or 625 / ITU-R BT1700 NTSC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.smpte240m">
            <summary>smpte240m</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.linear">
            <summary>Linear transfer characteristics</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.log">
            <summary>Logarithmic transfer characteristic (100:1 range)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.log_sqrt">
            <summary>Logarithmic transfer characteristic (100 * Sqrt(10) : 1 range)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.iec61966_2_4">
            <summary>IEC 61966-2-4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.bt1361_ecg">
            <summary>ITU-R BT1361 Extended Colour Gamut</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.iec61966_2_1">
            <summary>IEC 61966-2-1 (sRGB or sYCC)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.bt2020_10">
            <summary>ITU-R BT2020 for 10-bit system</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.bt2020_12">
            <summary>ITU-R BT2020 for 12-bit system</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.smpte2084">
            <summary>SMPTE ST 2084 for 10-, 12-, 14- and 16-bit systems</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.smpte428">
            <summary>smpte428</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.ColorTransfers.arib_std_b67">
            <summary>ARIB STD-B67, known as 'Hybrid log-gamma'</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.Sdr">
            <summary>
            SDR
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.Hdr10">
            <summary>
            HDR 10
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.Hdr10Plus">
            <summary>
            HDR 10+
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.HyperLogGamma">
            <summary>
            HLG
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.BluRay">
            <summary>
            Blu-Ray
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HdrBaseFormats.DV">
            <summary>
            DV
            </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileConstrainedBaseline">
            <summary>Constrained Baseline Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileBaseline">
            <summary>Baseline Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileMain">
            <summary>Main Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileExtended">
            <summary>Extended Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileConstrainedHigh">
            <summary>Constrained High Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileProgressiveHigh">
            <summary>Progressive High Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileHigh">
            <summary>High Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileHigh10">
            <summary>High 10 Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileHigh422">
            <summary>High 4:2:2 Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.AvcProfiles.AvcProfileHigh444">
            <summary>High 4:4:4 Predictive Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileBaseline">
            <summary>Baseline Profile (0)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileH320Coding">
            <summary>H.320 Backward-Compatibility Profile (1)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileBackwardCompatible">
            <summary>Version 1 Backward-Compatibility Profile (2)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileIswv2">
            <summary>Version 2 Interactive and Streaming Wireless Profile (3)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileIswv3">
            <summary>Version 3 Interactive and Streaming Wireless Profile (4)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileHighCompression">
            <summary>Conversational High Compression Profile (5)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileInternet">
            <summary>Conversational Internet Profile (6)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileInterlace">
            <summary>Conversational Interlace Profile (7)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.H263Profiles.H263ProfileHighLatency">
            <summary>High Latency Profile (8)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcProfiles.HevcProfileMain">
            <summary>Main Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcProfiles.HevcProfileMain10">
            <summary>Main 10 Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcProfiles.HevcProfileMainSP">
            <summary>Main Still Picture</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.HevcProfiles.HevcProfileMainRext">
            <summary>Range Extension (REXT)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2ProfileSimple">
            <summary>Simple Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2ProfileMain">
            <summary>Main Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2ProfileSnr">
            <summary>SNR Scalable Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2ProfileSpatial">
            <summary>Spatial Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2ProfileHigh">
            <summary>High Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2Profile422">
            <summary>4:2:2 Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg2Profiles.Mpeg2ProfileMvp">
            <summary>Multi-View Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Profiles.Vc1ProfileSimple">
            <summary>Simple Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Profiles.Vc1ProfileMain">
            <summary>Main Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Profiles.Vc1ProfileAdvanced">
            <summary>Advanced Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vc1Profiles.Vc1ProfileComplex">
            <summary>Complex Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileAdvancedCoding">
            <summary>Advanced Coding Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileAdvancedCore">
            <summary>Advanced Core Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileAdvancedRealtime">
            <summary>Advanced Real Time Simple Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileAdvancedScalable">
            <summary>Advanced Scalable Texture Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileAdvancedSimple">
            <summary>Advanced Simple Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileBasicAnimated">
            <summary>Basic Animated Texture Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileCore">
            <summary>Core Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileCoreScalable">
            <summary>Core Scalable Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileHybrid">
            <summary>Hybrid Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileMain">
            <summary>Main Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileNbit">
            <summary>N-bit Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileScalableTexture">
            <summary>Scalable Texture Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileSimple">
            <summary>Simple Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileSimpleFace">
            <summary>Simple Face Animation Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileSimpleFba">
            <summary>Simple Studio Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Mpeg4Profiles.Mpeg4ProfileSimpleScalable">
            <summary>Simple Scalable Profile</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp8Profiles.Vp8Profile0">
            <summary>Profile 0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp8Profiles.Vp8Profile1">
            <summary>Profile 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp8Profiles.Vp8Profile2">
            <summary>Profile 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp8Profiles.Vp8Profile3">
            <summary>Profile 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Profiles.Vp9Profile0">
            <summary>Profile 0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Profiles.Vp9Profile1">
            <summary>Profile 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Profiles.Vp9Profile2">
            <summary>Profile 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Vp9Profiles.Vp9Profile3">
            <summary>Profile 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Profiles.Av1ProfileMain">
            <summary>Main</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Profiles.Av1ProfileHigh">
            <summary>High</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.Av1Profiles.Av1ProfilePro">
            <summary>Professional</summary>
        </member>
        <member name="T:Emby.Media.Model.Enums.VideoMediaTypes">
            <summary>
            Enum listing video media types.
            </summary>
            <remarks>
            The enum member names are matching exactly those that are used by ffmpeg.
            Exception: Items that are starting with a number are prefixed with an underscore here.
            </remarks>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.flv1">
            <summary>FLV (H.263)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.h263">
            <summary>H.263</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.h263p">
            <summary>H.263+</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.h264">
            <summary>H.264 (AVC)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.hevc">
            <summary>H.265 (HEVC)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mjpeg">
            <summary>Motion JPEG</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg1video">
            <summary>MPEG-1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg2video">
            <summary>MPEG-2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg4">
            <summary>MPEG-4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.msvideo1">
            <summary>MS Video-1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.theora">
            <summary>Theora</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vc1image">
            <summary>WMV 9 Image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vc1">
            <summary>VC-1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp8">
            <summary>VP8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp9">
            <summary>VP9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.wmv1">
            <summary>WMV 7</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.wmv2">
            <summary>WMV 8</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.wmv3">
            <summary>WMV 9</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes._012v">
            <summary>Uncompressed 4:2:2 10-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes._4xm">
            <summary>4X Movie</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes._8bps">
            <summary>QuickTime 8BPS video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.a64_multi">
            <summary>Multicolor charset for Commodore 64</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.a64_multi5">
            <summary>Multicolor charset for Commodore 64, extended with 5th color (colram)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.aasc">
            <summary>Autodesk RLE</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.aic">
            <summary>Apple Intermediate Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.alias_pix">
            <summary>Alias/Wavefront PIX image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.amv">
            <summary>AMV Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.anm">
            <summary>Deluxe Paint Animation</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ansi">
            <summary>ASCII/ANSI art</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.apng">
            <summary>APNG (Animated Portable Network Graphics) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.asv1">
            <summary>ASUS V1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.asv2">
            <summary>ASUS V2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.aura">
            <summary>Auravision AURA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.aura2">
            <summary>Auravision Aura 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.av1">
            <summary>AV1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.avrn">
            <summary>Avid AVI Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.avrp">
            <summary>Avid 1:1 10-bit RGB Packer</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.avs">
            <summary>AVS (Audio Video Standard) video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.avui">
            <summary>Avid Meridien Uncompressed</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ayuv">
            <summary>Uncompressed packed MS 4:4:4:4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.bethsoftvid">
            <summary>Bethesda VID video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.bfi">
            <summary>Brute Force &amp; Ignorance</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.binkvideo">
            <summary>Bink video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.bintext">
            <summary>Binary text</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.bitpacked">
            <summary>Bitpacked</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.bmp">
            <summary>BMP (Windows and OS/2 bitmap)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.bmv_video">
            <summary>Discworld II BMV video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.brender_pix">
            <summary>BRender PIX image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.c93">
            <summary>Interplay C93</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cavs">
            <summary>Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cdgraphics">
            <summary>CD Graphics video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cdxl">
            <summary>Commodore CDXL video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cfhd">
            <summary>Cineform HD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cinepak">
            <summary>Cinepak</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.clearvideo">
            <summary>Iterated Systems ClearVideo</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cljr">
            <summary>Cirrus Logic AccuPak</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cllc">
            <summary>Canopus LossLess Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cmv">
            <summary>Electronic Arts CMV video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cpia">
            <summary>CPiA video format</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cscd">
            <summary>CamStudio</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.cyuv">
            <summary>Creative YUV (CYUV)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.daala">
            <summary>Daala</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dds">
            <summary>DirectDraw Surface image decoder</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dfa">
            <summary>Chronomaster DFA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dirac">
            <summary>Dirac</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dnxhd">
            <summary>VC3/DNxHD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dpx">
            <summary>DPX (Digital Picture Exchange) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dsicinvideo">
            <summary>Delphine Software International CIN video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dvvideo">
            <summary>DV (Digital Video)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dxa">
            <summary>Feeble Files/ScummVM DXA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dxtory">
            <summary>Dxtory</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.dxv">
            <summary>Resolume DXV</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.escape124">
            <summary>Escape 124</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.escape130">
            <summary>Escape 130</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.exr">
            <summary>OpenEXR image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ffv1">
            <summary>FFmpeg video codec #1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ffvhuff">
            <summary>Huffyuv FFmpeg variant</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.fic">
            <summary>Mirillis FIC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.fits">
            <summary>FITS (Flexible Image Transport System)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.flashsv">
            <summary>Flash Screen Video v1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.flashsv2">
            <summary>Flash Screen Video v2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.flic">
            <summary>Autodesk Animator Flic video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.fmvc">
            <summary>FM Screen Capture Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.fraps">
            <summary>Fraps</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.frwu">
            <summary>Forward Uncompressed</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.g2m">
            <summary>Go2Meeting</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.gdv">
            <summary>Gremlin Digital Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.gif">
            <summary>GIF (Graphics Interchange Format)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.h261">
            <summary>H.261</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.h263i">
            <summary>Intel H.263</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.hap">
            <summary>Vidvox Hap</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.hnm4video">
            <summary>HNM 4 video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.hq_hqa">
            <summary>Canopus HQ/HQA</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.hqx">
            <summary>Canopus HQX</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.huffyuv">
            <summary>HuffYUV</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.idcin">
            <summary>id Quake II CIN video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.idf">
            <summary>iCEDraw text</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.iff_ilbm">
            <summary>IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.indeo2">
            <summary>Intel Indeo 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.indeo3">
            <summary>Intel Indeo 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.indeo4">
            <summary>Intel Indeo Video Interactive 4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.indeo5">
            <summary>Intel Indeo Video Interactive 5</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.interplayvideo">
            <summary>Interplay MVE video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.jpeg2000">
            <summary>JPEG 2000</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.jpegls">
            <summary>JPEG-LS</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.jv">
            <summary>Bitmap Brothers JV video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.kgv1">
            <summary>Kega Game Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.kmvc">
            <summary>Karl Morton's video codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.lagarith">
            <summary>Lagarith LossLess</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ljpeg">
            <summary>LossLess JPEG</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.loco">
            <summary>LOCO</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.m101">
            <summary>Matrox Uncompressed SD</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mad">
            <summary>Electronic Arts Madcow Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.magicyuv">
            <summary>MagicYUV video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mdec">
            <summary>Sony PlayStation MDEC (Motion DECoder)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mimic">
            <summary>Mimic</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mjpegb">
            <summary>Apple MJPEG-B</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mmvideo">
            <summary>American Laser Games MM Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.motionpixels">
            <summary>Motion Pixels video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.msa1">
            <summary>MS ATC Screen</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mscc">
            <summary>Mandsoft Screen Capture Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.msmpeg4v1">
            <summary>MPEG-4 part 2 Microsoft variant version 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.msmpeg4v2">
            <summary>MPEG-4 part 2 Microsoft variant version 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.msmpeg4v3">
            <summary>MPEG-4 part 2 Microsoft variant version 3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.msrle">
            <summary>Microsoft RLE</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mss1">
            <summary>MS Screen 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mss2">
            <summary>MS Windows Media Video V9 Screen</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mszh">
            <summary>LCL (LossLess Codec Library) MSZH</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mts2">
            <summary>MS Expression Encoder Screen</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mvc1">
            <summary>Silicon Graphics Motion Video Compressor 1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mvc2">
            <summary>Silicon Graphics Motion Video Compressor 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.mxpeg">
            <summary>Mobotix MxPEG video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.nuv">
            <summary>NuppelVideo/RTJPEG</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.paf_video">
            <summary>Amazing Studio Packed Animation File Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pam">
            <summary>PAM (Portable AnyMap) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pbm">
            <summary>PBM (Portable BitMap) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pcx">
            <summary>PC Paintbrush PCX image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pgm">
            <summary>PGM (Portable GrayMap) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pgmyuv">
            <summary>PGMYUV (Portable GrayMap YUV) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pictor">
            <summary>Pictor/PC Paint</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.pixlet">
            <summary>Apple Pixlet</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.png">
            <summary>PNG (Portable Network Graphics) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ppm">
            <summary>PPM (Portable PixelMap) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.prores">
            <summary>Apple ProRes (iCodec Pro)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.psd">
            <summary>Photoshop PSD file</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ptx">
            <summary>V.Flash PTX image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.qdraw">
            <summary>Apple QuickDraw</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.qpeg">
            <summary>Q-team QPEG</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.qtrle">
            <summary>QuickTime Animation (RLE) video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.r10k">
            <summary>AJA Kona 10-bit RGB Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.r210">
            <summary>Uncompressed RGB 10-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rawvideo">
            <summary>raw video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rl2">
            <summary>RL2 video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.roq">
            <summary>id RoQ video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rpza">
            <summary>QuickTime video (RPZA)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rscc">
            <summary>innoHeim/Rsupport Screen Capture Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rv10">
            <summary>RealVideo 1.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rv20">
            <summary>RealVideo 2.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rv30">
            <summary>RealVideo 3.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.rv40">
            <summary>RealVideo 4.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.sanm">
            <summary>LucasArts SANM/SMUSH video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.scpr">
            <summary>ScreenPressor</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.screenpresso">
            <summary>Screenpresso</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.sgi">
            <summary>SGI image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.sgirle">
            <summary>SGI RLE 8-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.sheervideo">
            <summary>BitJazz SheerVideo</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.smackvideo">
            <summary>Smacker video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.smc">
            <summary>QuickTime Graphics (SMC)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.smvjpeg">
            <summary>Sigmatel Motion Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.snow">
            <summary>Snow</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.sp5x">
            <summary>Sunplus JPEG (SP5X)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.speedhq">
            <summary>NewTek SpeedHQ</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.srgc">
            <summary>Screen Recorder Gold Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.sunrast">
            <summary>Sun Rasterfile image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.svg">
            <summary>Scalable Vector Graphics</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.svq1">
            <summary>Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.svq3">
            <summary>Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.targa">
            <summary>Truevision Targa image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.targa_y216">
            <summary>Pinnacle TARGA CineWave YUV16</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tdsc">
            <summary>TDSC</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tgq">
            <summary>Electronic Arts TGQ video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tgv">
            <summary>Electronic Arts TGV video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.thp">
            <summary>Nintendo Gamecube THP video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tiertexseqvideo">
            <summary>Tiertex Limited SEQ video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tiff">
            <summary>TIFF image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tmv">
            <summary>8088flex TMV</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tqi">
            <summary>Electronic Arts TQI video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.truemotion1">
            <summary>Duck TrueMotion 1.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.truemotion2">
            <summary>Duck TrueMotion 2.0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.truemotion2rt">
            <summary>Duck TrueMotion 2.0 Real Time</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tscc">
            <summary>TechSmith Screen Capture Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.tscc2">
            <summary>TechSmith Screen Codec 2</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.txd">
            <summary>Renderware TXD (TeXture Dictionary) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ulti">
            <summary>IBM UltiMotion</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.utvideo">
            <summary>Ut Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.v210">
            <summary>Uncompressed 4:2:2 10-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.v210x">
            <summary>Uncompressed 4:2:2 10-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.v308">
            <summary>Uncompressed packed 4:4:4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.v408">
            <summary>Uncompressed packed QT 4:4:4:4</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.v410">
            <summary>Uncompressed 4:4:4 10-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vb">
            <summary>Beam Software VB</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vble">
            <summary>VBLE LossLess Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vcr1">
            <summary>ATI VCR1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vixl">
            <summary>Miro VideoXL</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vmdvideo">
            <summary>Sierra VMD video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vmnc">
            <summary>VMware Screen Codec / VMware Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp3">
            <summary>On2 VP3</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp5">
            <summary>On2 VP5</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp6">
            <summary>On2 VP6</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp6a">
            <summary>On2 VP6 (Flash version, with alpha channel)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp6f">
            <summary>On2 VP6 (Flash version)</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.vp7">
            <summary>On2 VP7</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.webp">
            <summary>WebP</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.wmv3image">
            <summary>Windows Media Video 9 Image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.wnv1">
            <summary>Winnov WNV1</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.wrapped_avframe">
            <summary>AVFrame to AVPacket passthrough</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ws_vqa">
            <summary>Westwood Studios VQA (Vector Quantized Animation) video </summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xan_wc3">
            <summary>Wing Commander III / Xan</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xan_wc4">
            <summary>Wing Commander IV / Xxan</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xbin">
            <summary>eXtended BINary text</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xbm">
            <summary>XBM (X BitMap) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xface">
            <summary>X-face image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xpm">
            <summary>XPM (X PixMap) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.xwd">
            <summary>XWD (X Window Dump) image</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.y41p">
            <summary>Uncompressed YUV 4:1:1 12-bit</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.ylc">
            <summary>YUY2 LossLess Codec</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.yop">
            <summary>Psygnosis YOP Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.yuv4">
            <summary>Uncompressed packed 4:2:0</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.zerocodec">
            <summary>ZeroCodec LossLess Video</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.zlib">
            <summary>LCL (LossLess Codec Library) ZLIB</summary>
        </member>
        <member name="F:Emby.Media.Model.Enums.VideoMediaTypes.zmbv">
            <summary>Zip Motion Blocks Video</summary>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.Filter">
            <summary>
            A filtergraph filter.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Filter.Description">
            <summary>Gets or sets the description.</summary>
            <value>The description.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Filter.HwDeviceContext">
            <summary>Gets or sets the hw device context.</summary>
            <value>The hw device context.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Filter.Inputs">
            <summary>Gets or sets the inputs.</summary>
            <value>The inputs.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Filter.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Filter.Name2">
            <summary>Gets or sets the name2.</summary>
            <value>The name2.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Filter.Outputs">
            <summary>Gets or sets the outputs.</summary>
            <value>The outputs.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.FilterWrapper">
            <summary>
            The wrapper for a single filter.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.FilterWrapper.Filter">
            <summary>Gets or sets the filter.</summary>
            <value>The filter.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.Graph">
            <summary>
            Represents a single filtergraph.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Graph.Description">
            <summary>Gets or sets the description.</summary>
            <value>The description.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Graph.Filters">
            <summary>Gets or sets the list of filter wrappers.</summary>
            <value>The filters of filter wrappers.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.GraphData">
            <summary>
            Root object for ffmpeg graph data.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.GraphData.Graphs">
            <summary>Gets or sets the list of graphs.</summary>
            <value>The graphs list.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.Hwdevicecontext">
            <summary>
            The hardware device context.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwdevicecontext.DeviceType">
            <summary>Gets or sets the type of the device.</summary>
            <value>The type of the device.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwdevicecontext.HasHwDeviceContext">
            <summary>Gets or sets the has hw device context.</summary>
            <value>The has hw device context.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwframescontext.HasHwFramesContext">
            <summary>Gets or sets the has hw frames context.</summary>
            <value>The has hw frames context.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwframescontext.Height">
            <summary>Gets or sets the height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwframescontext.HwDeviceContext">
            <summary>Gets or sets the hw device context.</summary>
            <value>The hw device context.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwframescontext.HwPixelFormat">
            <summary>Gets or sets the hw pixel format.</summary>
            <value>The hw pixel format.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwframescontext.SwPixelFormat">
            <summary>Gets or sets the sw pixel format.</summary>
            <value>The sw pixel format.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.Hwframescontext.Width">
            <summary>Gets or sets the width.</summary>
            <value>The width.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.InputLink">
            <summary>
            The input link.
            </summary>
            <seealso cref="T:Emby.Media.Model.GraphModel.LinkBase" />
        </member>
        <member name="P:Emby.Media.Model.GraphModel.InputLink.LinkType">
            <summary>Gets the type of the link.</summary>
            <value>The type of the link.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.LinkBase">
            <summary>
            The link base class.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.ChannelLayout">
            <summary>Gets or sets the channel layout.</summary>
            <value>The channel layout.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Channels">
            <summary>Gets or sets the channels.</summary>
            <value>The channels.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.ChannelString">
            <summary>Gets or sets the channel string.</summary>
            <value>The channel string.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Description">
            <summary>Gets or sets the description.</summary>
            <value>The description.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.DestName">
            <summary>Gets or sets the name of the dest.</summary>
            <value>The name of the dest.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.DestPadName">
            <summary>Gets or sets the name of the dest pad.</summary>
            <value>The name of the dest pad.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Format">
            <summary>Gets or sets the format.</summary>
            <value>The format.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Height">
            <summary>Gets or sets the height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.HwFramesContext">
            <summary>Gets or sets the hw frames context.</summary>
            <value>The hw frames context.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.LinkType">
            <summary>Gets the type of the link.</summary>
            <value>The type of the link.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.MediaType">
            <summary>Gets or sets the type of the media.</summary>
            <value>The type of the media.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.MediaTypeId">
            <summary>Gets or sets the media type identifier.</summary>
            <value>The media type identifier.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Name1">
            <summary>Gets or sets the name1.</summary>
            <value>The name1.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Name2">
            <summary>Gets or sets the name2.</summary>
            <value>The name2.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Name3">
            <summary>Gets or sets the name3.</summary>
            <value>The name3.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.SampleRate">
            <summary>Gets or sets the sample rate.</summary>
            <value>The sample rate.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.SAR">
            <summary>Gets or sets the sar.</summary>
            <value>The sar.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.SourceName">
            <summary>Gets or sets the name of the source.</summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.SourcePadName">
            <summary>Gets or sets the name of the source pad.</summary>
            <value>The name of the source pad.</value>
        </member>
        <member name="P:Emby.Media.Model.GraphModel.LinkBase.Width">
            <summary>Gets or sets the width.</summary>
            <value>The width.</value>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.LinkType">
            <summary>
            Enum of link typess.
            </summary>
        </member>
        <member name="F:Emby.Media.Model.GraphModel.LinkType.Input">
            <summary>The input link type.</summary>
        </member>
        <member name="F:Emby.Media.Model.GraphModel.LinkType.Output">
            <summary>The output link type.</summary>
        </member>
        <member name="T:Emby.Media.Model.GraphModel.OutputLink">
            <summary>
            The output link.
            </summary>
            <seealso cref="T:Emby.Media.Model.GraphModel.LinkBase" />
        </member>
        <member name="P:Emby.Media.Model.GraphModel.OutputLink.LinkType">
            <summary>Gets the type of the link.</summary>
            <value>The type of the link.</value>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeChapter">
            <summary>ffprobe chapter class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeError">
            <summary>ffprobe error class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeFormat">
            <summary>ffprobe format class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeFrame">
            <summary>ffprobe frame class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="P:Emby.Media.Model.ProbeModel.ProbeFrame.format">
            <summary>Gets or sets the format.</summary>
            <value>The format.</value>
            <remarks>
              For subtitles:
                0: AV_SUBTITLE_FMT_BITMAP
                1: AV_SUBTITLE_FMT_TEXT
                2: AV_SUBTITLE_FMT_ASS
              For Video: pix_ftm
              For Audio: sample_fmt
            </remarks>
        </member>
        <member name="M:Emby.Media.Model.ProbeModel.ProbeFrame.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbePacket">
            <summary>ffprobe packet class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="M:Emby.Media.Model.ProbeModel.ProbePacket.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeResult">
            <summary>ffprobe result class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="M:Emby.Media.Model.ProbeModel.ProbeResult.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeStream">
            <summary>ffprobe stream class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="M:Emby.Media.Model.ProbeModel.ProbeStream.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.ProbeModel.ProbeSideData">
            <summary>ffprobe chapter class.</summary>
            <remarks>Based on official spec from: https://raw.githubusercontent.com/FFmpeg/FFmpeg/master/doc/ffprobe.xsd </remarks>
        </member>
        <member name="M:Emby.Media.Model.ProbeModel.ProbeSideDataList.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1"></see> class that is empty and has the default initial capacity.</summary>
        </member>
        <member name="M:Emby.Media.Model.ProbeModel.ProbeSideDataList.#ctor(System.Collections.Generic.IEnumerable{Emby.Media.Model.ProbeModel.ProbeSideData})">
            <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1"></see> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection">collection</paramref> is null.</exception>
        </member>
        <member name="M:Emby.Media.Model.Streams.AttachmentStream.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.AttachmentStream"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.AttachmentStream.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.AttachmentStream" /> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.AttachmentStream.#ctor(Emby.Media.Model.Streams.AttachmentStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.AttachmentStream"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.AttachmentStream.AttachmentSize">
            <summary>Gets or sets the attachment size in bytes.</summary>
            <value>The attachment size.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AttachmentStream.FileName">
            <summary>Gets or sets the attachment file name.</summary>
            <value>The attachment file name.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AttachmentStream.MimeType">
            <summary>Gets or sets the attachment mime type.</summary>
            <value>The attachment mime type.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.AttachmentStream.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.AttachmentStream.GetShortDescriptionBits">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.AudioStream.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.AudioStream"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.AudioStream.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.AudioStream"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.AudioStream.#ctor(Emby.Media.Model.Streams.AudioStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.AudioStream"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.AudioStream.Profile">
            <summary>Gets or sets the profile.</summary>
            <value>The profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AudioStream.Channels">
            <summary>Gets or sets the channels.</summary>
            <value>The channels.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AudioStream.ChannelLayout">
            <summary>Gets or sets the channel layout.</summary>
            <value>The channel layout.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AudioStream.BitRate">
            <summary>Gets or sets the bit rate.</summary>
            <value>The bit rate.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AudioStream.BitsPerSample">
            <summary>
            Gets or sets the bit depth.
            </summary>
            <value>The bit depth.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.AudioStream.SampleRate">
            <summary>Gets or sets the sample rate.</summary>
            <value>The sample rate.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.AudioStream.GetShortDescriptionBits">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.AudioStream.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.StreamBase.#ctor(MediaBrowser.Model.Entities.MediaStreamType,MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.StreamBase"/> class.</summary>
            <param name="streamType">Type of the stream.</param>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.StreamBase.#ctor(Emby.Media.Model.Streams.StreamBase)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.StreamBase"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.Index">
            <summary>Gets or sets the index.</summary>
            <value>The index.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.Id">
            <summary>Gets or sets the identifier.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.Pid">
            <summary>Gets or sets the PID.</summary>
            <value>The PID.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.IsDefault">
            <summary>Gets or sets a value indicating whether this instance is default.</summary>
            <value><c>true</c> if this instance is default; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.IsForced">
            <summary>Gets or sets a value indicating whether this instance is forced.</summary>
            <value><c>true</c> if this instance is forced; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.Title">
            <summary>Gets or sets the title.</summary>
            <value>The title.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.Language">
            <summary>Gets or sets the language.</summary>
            <value>The language.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.Comment">
            <summary>Gets or sets the comment.</summary>
            <value>The comment.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.AllTags">
            <summary>Gets or sets all tags.</summary>
            <value>All tags.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.SideDataJson">
            <summary>Gets or sets the side data json.</summary>
            <value>The side data json.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.ParsingErrors">
            <summary>Gets the parsing errors.</summary>
            <value>The parsing errors.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.StreamBase.IsExternal">
            <summary>Gets or sets a value indicating whether this stream is external.</summary>
            <value><c>true</c> if this instance is external; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.StreamBase.GetShortDescriptionBits">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.StreamBase.GetShortDescription">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.StreamBase.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.SubtitleStream.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.SubtitleStream"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.SubtitleStream.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.SubtitleStream"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.SubtitleStream.#ctor(Emby.Media.Model.Streams.SubtitleStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.SubtitleStream"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.SubtitleStream.IsGraphical">
            <summary>Gets or sets the size of of graphical subtitles.</summary>
            <value>The size of of graphical subtitles.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.SubtitleStream.FrameSize">
            <summary>Gets or sets the size of of graphical subtitles.</summary>
            <value>The size of of graphical subtitles.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.SubtitleStream.ClosedCaptionType">
            <summary>Gets or sets the type of the closed caption.</summary>
            <value>The type of the closed caption.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.SubtitleStream.GetShortDescriptionBits">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.SubtitleStream.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.UnknownStream.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.UnknownStream"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.UnknownStream.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.UnknownStream"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.UnknownStream.#ctor(Emby.Media.Model.Streams.UnknownStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.UnknownStream"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="M:Emby.Media.Model.Streams.UnknownStream.GetShortDescriptionBits">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.UnknownStream.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStream.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStream"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStream.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStream"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStream.#ctor(Emby.Media.Model.Streams.VideoStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStream"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.PixelFormat">
            <summary>Gets or sets the pixel format.</summary>
            <value>The pixel format.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.IsInterlaced">
            <summary>Gets or sets a value indicating whether this instance is interlaced.</summary>
            <value><c>true</c> if this instance is interlaced; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.BitRate">
            <summary>Gets or sets the bit rate.</summary>
            <value>The bit rate.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.BitsPerPixel">
            <summary>Gets or sets the number of bits per pixel.</summary>
            <value>The number of bits per pixel.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.BitDepth">
            <summary>Gets or sets the bit depth.</summary>
            <value>The bit depth.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.RefFrames">
            <summary>Gets or sets the reference frames.</summary>
            <value>The reference frames.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.VideoSize">
            <summary>Gets or sets the size of the video.</summary>
            <value>The size of the video.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.AverageFrameRate">
            <summary>Gets or sets the average frame rate.</summary>
            <value>The average frame rate.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.RealFrameRate">
            <summary>Gets or sets the real frame rate.</summary>
            <value>The real frame rate.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.AspectRatio">
            <summary>Gets or sets the display aspect ratio.</summary>
            <value>The display aspect ratio.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.SampleAspectRatio">
            <summary>Gets or sets the sample aspect ratio.</summary>
            <value>The sample aspect ratio.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.Profile">
            <summary>Gets or sets the profile.</summary>
            <value>The profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.Level">
            <summary>Gets or sets the level.</summary>
            <value>The level.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStream.IsAnamorphic">
            <summary>
            Gets a value indicating whether this instance is anamorphic.
            </summary>
            <value><c>true</c> if this instance is anamorphic; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStream.GetShortDescriptionBits">
            <summary>Gets a short description.</summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStream.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamH264.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamH264"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamH264.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamH264"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamH264.#ctor(Emby.Media.Model.Streams.VideoStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamH264"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStreamH264.H264Profile">
            <summary>
            Gets or sets the H.264 profile.
            </summary>
            <value>The H.264 profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStreamH264.H264Level">
            <summary>
            Gets or sets the H.264 level.
            </summary>
            <value>The H.264 level.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamHevc.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamHevc"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamHevc.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamHevc"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamHevc.#ctor(Emby.Media.Model.Streams.VideoStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamHevc"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStreamHevc.HevcProfile">
            <summary>
            Gets or sets the HEVC profile.
            </summary>
            <value>The HEVC profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStreamHevc.HevcLevel">
            <summary>
            Gets or sets the HEVC level.
            </summary>
            <value>The HEVC level.</value>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamMpeg2.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamMpeg2"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamMpeg2.#ctor(MediaBrowser.Model.Entities.MediaStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamMpeg2"/> class.</summary>
            <param name="originalStream">The original stream.</param>
        </member>
        <member name="M:Emby.Media.Model.Streams.VideoStreamMpeg2.#ctor(Emby.Media.Model.Streams.VideoStream)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Streams.VideoStreamMpeg2"/> class.</summary>
            <param name="source">The source.</param>
            <remarks>Copy constructor.</remarks>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStreamMpeg2.Mpeg2Profile">
            <summary>
            Gets or sets the Mpeg2 profile.
            </summary>
            <value>The Mpeg2 profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Streams.VideoStreamMpeg2.Mpeg2Level">
            <summary>
            Gets or sets the Mpeg2 level.
            </summary>
            <value>The Mpeg2 level.</value>
        </member>
        <member name="T:Emby.Media.Model.Types.BitRate">
            <summary>
            A type for handling bit rates.
            </summary>
            <remarks>The purpose of this type is to avoid manual calculations and conversions in code,
            unified handling and conversion as well as presentation through its various To***String methods.</remarks>
            <seealso cref="T:System.IComparable" />
            <seealso cref="T:System.IEquatable`1" />
        </member>
        <member name="M:Emby.Media.Model.Types.BroadcastResolutions.BroadcastResolution.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.Types.ByteSize">
            <summary>
            A type for handling byte sizes.
            </summary>
            <remarks>The purpose of this type is to avoid manual calculations and conversions in code,
            unified handling and conversion as well as presentation through its various To***String methods.</remarks>
            <seealso cref="T:System.IComparable" />
            <seealso cref="T:System.IEquatable`1" />
        </member>
        <member name="T:Emby.Media.Model.Types.LevelInformation">
            <summary>
            Class for unified presentation of all information associated with a specific codec level.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.ShortName">
            <summary>Gets the enum member name of the level.</summary>
            <value>The enum member name of the level.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.Description">
            <summary>Gets the common name of the level.</summary>
            <value>The common name of the level.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.Ordinal">
            <summary>Gets a value indicating the level's ranking relative to other levels.</summary>
            <value>The level rank.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.MaxBitRate">
            <summary>Gets the maximum bit rate supported by this level.</summary>
            <value>The maximum bit rate.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.MaxBitRateDisplay">
            <summary>Gets a display value of the <see cref="P:Emby.Media.Model.Types.LevelInformation.MaxBitRate"/> property.</summary>
            <value>The maximum bit rate as string.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.Id">
            <summary>Gets a unique identifier.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.ResolutionRates">
            <summary>Gets examples for the maximum supported combinations of resolution and rate for this level.</summary>
            <value>A list of <see cref="T:Emby.Media.Model.Types.ResolutionWithRate"/> values.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.ResolutionRateStrings">
            <summary>Gets examples for the maximum supported combinations of resolution and rate for this level as string values.</summary>
            <value>A list of <see cref="T:System.String"/> values.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.LevelInformation.ResolutionRatesDisplay">
            <summary>Gets a single string from the <see cref="P:Emby.Media.Model.Types.LevelInformation.ResolutionRateStrings"/> list.</summary>
            <value>A string containing resolutions and rates.</value>
        </member>
        <member name="T:Emby.Media.Model.Types.MediaTagList">
            <summary>
            Implements a list of tags.
            </summary>
            <seealso cref="T:System.Collections.Generic.List`1" />
        </member>
        <member name="M:Emby.Media.Model.Types.MediaTagList.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.MediaTagList"/> class.</summary>
        </member>
        <member name="M:Emby.Media.Model.Types.MediaTagList.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.MediaTagList"/> class.</summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Emby.Media.Model.Types.MediaTagList.#ctor(System.Collections.Generic.IEnumerable{Emby.Media.Model.Types.MediaTagList.MediaTag})">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.MediaTagList"/> class.</summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:Emby.Media.Model.Types.MediaTagList.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Emby.Media.Model.Types.MediaTagList.MediaTag.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Emby.Media.Model.Types.MediaTagList.MediaTag.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.Types.PixelFormat">
            <summary>The Pixel Format.</summary>
        </member>
        <member name="M:Emby.Media.Model.Types.PixelFormat.#ctor(Emby.Media.Model.Enums.ColorFormats,Emby.Media.Model.Enums.Endian)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.PixelFormat" /> class.</summary>
            <param name="colorFormat">The color format.</param>
            <param name="endian">The endian.</param>
        </member>
        <member name="P:Emby.Media.Model.Types.PixelFormat.ColorFormat">
            <summary>Gets the color format.</summary>
            <value>The color format.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.PixelFormat.Endian">
            <summary>Gets the endian.</summary>
            <value>The endian.</value>
        </member>
        <member name="M:Emby.Media.Model.Types.PixelFormat.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Emby.Media.Model.Types.ProfileInformation">
            <summary>
            Class for unified presentation of all information associated with a specific codec profile.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileInformation.ShortName">
            <summary>Gets the enum member name of the profile.</summary>
            <value>The enum member name of the profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileInformation.Description">
            <summary>Gets the common name of the profile.</summary>
            <value>The common name of the profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileInformation.Details">
            <summary>Gets detail information about the profile.</summary>
            <value>A string containing detail information about the profile.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileInformation.Id">
            <summary>Gets a unique identifier.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileInformation.BitDepths">
            <summary>Gets the bit depths.</summary>
            <value>The bit depths.</value>
        </member>
        <member name="T:Emby.Media.Model.Types.ProfileLevelInformation">
            <summary>
            A class combining both <see cref="T:Emby.Media.Model.Types.ProfileInformation"/> and <see cref="T:Emby.Media.Model.Types.LevelInformation"/>.
            </summary>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileLevelInformation.Profile">
            <summary>Gets the profile.</summary>
            <value>The profile as <see cref="T:Emby.Media.Model.Types.ProfileInformation"/>.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileLevelInformation.Level">
            <summary>Gets the level.</summary>
            <value>The level as <see cref="T:Emby.Media.Model.Types.LevelInformation"/>.</value>
        </member>
        <member name="T:Emby.Media.Model.Types.ProfileWithLevel`2">
            <summary>
            A generic base class combining a profile and level enum value.
            </summary>
            <remarks>This is primarily a prerequisite for <see cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3"/>.</remarks>
            <typeparam name="TP">The type of the profile enum.</typeparam>
            <typeparam name="TL">The type of the level enum.</typeparam>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileWithLevel`2.Profile">
            <summary>Gets the profile enum value.</summary>
            <value>The profile enum value.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ProfileWithLevel`2.Level">
            <summary>Gets the level enum value.</summary>
            <value>The level enum value.</value>
        </member>
        <member name="T:Emby.Media.Model.Types.AvcProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.h264"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.HevcProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.hevc"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.H263ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.h263p"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.Mpeg2ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg2video"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.Mpeg4ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg4"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.Vp8ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.vp8"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.Vp9ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.vp9"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.Av1ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.av1"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.Vc1ProfileWithLevel">
            <summary>
            Class combining profile and level for <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.vc1"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevel`2" />
        </member>
        <member name="T:Emby.Media.Model.Types.ProfileWithLevelList`3">
            <summary>
            A generic base class implementing a list of profiles and associated maximum supported levels.
            </summary>
            <typeparam name="T">A profile and level combination, derived from <see cref="T:Emby.Media.Model.Types.ProfileWithLevel`2"/>.</typeparam>
            <typeparam name="TP">The type of the profile enum.</typeparam>
            <typeparam name="TL">The type of the level enum.</typeparam>
            <seealso cref="T:System.Collections.Generic.List`1" />
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3"/> class.
            </summary>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.Add(`1,`2)">
            <summary>Adds the specified combination of profile and level to the list.</summary>
            <param name="profile">The profile.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.ContainsProfile(`1)">
            <summary>Determines whether the list contains profile.</summary>
            <param name="profile">The profile.</param>
            <returns><c>true</c> if the specified profile is contained; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.HasProfileWithBitDepth(System.Int32)">
            <summary>
            Determines whether a profile in the collection supports the specified bit depth.
            </summary>
            <param name="bitDepth">The bit depth.</param>
            <returns><c>true</c> if a profile with the specified bit depth exists; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.GetLevel(`1)">
            <summary>Returns the maximum supported level for the specified profile.</summary>
            <param name="profile">The profile.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.RemoveProfile(`1)">
            <summary>Returns the maximum supported level for the specified profile.</summary>
            <param name="profile">The profile.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.GetMaxLevel">
            <summary>Returns the level having the highest ordinal.</summary>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.GetMaxAndLowerLevels">
            <summary>Returns a list of the level having the highest ordinal and all lower levels.</summary>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.GetProfiles">
            <summary>Returns all profiles.</summary>
        </member>
        <member name="M:Emby.Media.Model.Types.ProfileWithLevelList`3.GetProfileLevelInformation">
            <summary>Creates a list of <see cref="T:Emby.Media.Model.Types.ProfileLevelInformation"/> objects for the contained items.</summary>
            <returns></returns>
        </member>
        <member name="T:Emby.Media.Model.Types.AvcProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.h264"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.HevcProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.hevc"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.H263ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.h263p"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Mpeg2ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg2video"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Mpeg4ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.mpeg4"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Vp8ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.vp8"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Vp9ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.vp9"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Av1ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.av1"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Vc1ProfileWithLevelList">
            <summary>
            Class representing a list of supported profiles and maximum supported levels for  <see cref="F:Emby.Media.Model.Enums.VideoMediaTypes.vp9"/>.
            </summary>
            <seealso cref="T:Emby.Media.Model.Types.ProfileWithLevelList`3" />
        </member>
        <member name="T:Emby.Media.Model.Types.Rational">
            <summary>
            Implements a rational value.
            </summary>
            <seealso cref="T:System.IComparable" />
            <seealso cref="T:System.IComparable" />
            <seealso cref="T:System.Runtime.Serialization.IDeserializationCallback" />
            <seealso cref="T:System.IEquatable`1" />
            <seealso cref="T:System.Runtime.Serialization.ISerializable" />
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.#ctor(System.Numerics.BigInteger,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.Rational" /> struct.</summary>
            <param name="numerator">The numerator.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.#ctor(System.Double,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.Rational" /> struct.</summary>
            <param name="value">The value.</param>
            <param name="delimiter">The delimiter.</param>
            <exception cref="T:System.ArgumentException">Argument is not a number - value
            or
            Argument is infinity - value</exception>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.#ctor(System.Decimal,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.Rational" /> struct.</summary>
            <param name="value">The value.</param>
            <param name="delimiter">The delimiter.</param>
            <exception cref="T:System.ArgumentException">invalid Decimal - value</exception>
            <remarks>
            The Decimal type represents floating point numbers exactly, with no rounding error.
            Values such as "0.1" in Decimal are actually representable, and convert cleanly
            to Rational as "11/10"
            </remarks>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.#ctor(System.Numerics.BigInteger,System.Numerics.BigInteger,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.Rational" /> struct.</summary>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <param name="delimiter">The delimiter.</param>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.#ctor(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.Rational" /> struct.</summary>
            <param name="whole">The whole.</param>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <param name="delimiter">The delimiter.</param>
            <exception cref="T:System.DivideByZeroException"></exception>
        </member>
        <member name="P:Emby.Media.Model.Types.Rational.MinusOne">
            <summary>Gets the minus one.</summary>
            <value>The minus one.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.Rational.One">
            <summary>Gets the one.</summary>
            <value>The one.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.Rational.Zero">
            <summary>Gets the zero.</summary>
            <value>The zero.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.Rational.Denominator">
            <summary>Gets the denominator.</summary>
            <value>The denominator.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.Rational.Numerator">
            <summary>Gets the numerator.</summary>
            <value>The numerator.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.Rational.Sign">
            <summary>Gets the sign.</summary>
            <value>The sign.</value>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Abs(Emby.Media.Model.Types.Rational)">
            <summary>Abses the specified r.</summary>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Add(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Adds the specified x.</summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Compare(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Compares the specified r1.</summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Divide(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Divides the specified dividend.</summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.DivRem(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational@)">
            <summary>Divs the rem.</summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <param name="remainder">The remainder.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Invert(Emby.Media.Model.Types.Rational)">
            <summary>Inverts the specified r.</summary>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.LeastCommonDenominator(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Least common denominator.</summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <remarks>
            The LCD is the least common multiple of the two denominators.  For instance, the LCD of
            {1/2, 1/4} is 4 because the least common multiple of 2 and 4 is 4.  Likewise, the LCD
            of {1/2, 1/3} is 6.
            To find the LCD:
            1) Find the Greatest Common Divisor (GCD) of the denominators
            2) Multiply the denominators together
            3) Divide the product of the denominators by the GCD
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Multiply(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Multiplies the specified x.</summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Negate(Emby.Media.Model.Types.Rational)">
            <summary>Negates the specified r.</summary>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Pow(Emby.Media.Model.Types.Rational,System.Numerics.BigInteger)">
            <summary>Pows the specified base value.</summary>
            <param name="baseValue">The base value.</param>
            <param name="exponent">The exponent.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">cannot raise zero to a negative power - baseValue</exception>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Remainder(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Remainders the specified dividend.</summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Subtract(Emby.Media.Model.Types.Rational,Emby.Media.Model.Types.Rational)">
            <summary>Subtracts the specified x.</summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.CompareTo(Emby.Media.Model.Types.Rational)">
            <summary>Compares to.</summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.Equals(Emby.Media.Model.Types.Rational)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.</returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.GetFractionPart">
            <summary>Gets the fraction part.</summary>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.GetWholePart">
            <summary>Gets the whole part.</summary>
            <returns></returns>
        </member>
        <member name="M:Emby.Media.Model.Types.Rational.ToString">
            <summary>Converts to string.</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Emby.Media.Model.Types.RationalTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType">destinationType</paramref> parameter is null.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="T:Emby.Media.Model.Types.Resolution">
            <summary>
            Struct representing a video resolution specified in X and Y dimension.
            </summary>
            <seealso cref="T:System.IComparable" />
            <seealso cref="T:System.IEquatable`1" />
        </member>
        <member name="F:Emby.Media.Model.Types.Resolution.Empty">
            <summary>Gets a resolution that has a width and height of 0.</summary>
        </member>
        <member name="M:Emby.Media.Model.Types.Resolution.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Emby.Media.Model.Types.Resolution"/> struct.</summary>
            <param name="width">The resolution width.</param>
            <param name="height">The resolution height.</param>
        </member>
        <member name="P:Emby.Media.Model.Types.Resolution.Width">
            <summary>Gets the resolution width.</summary>
            <value>The resolution width.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.Resolution.Height">
            <summary>Gets the resolution height.</summary>
            <value>The resolution height.</value>
        </member>
        <member name="T:Emby.Media.Model.Types.ResolutionWithRate">
            <summary>
            Struct representing a combination of video resolution and frame rate.
            </summary>
            <seealso cref="T:System.IEquatable`1" />
        </member>
        <member name="P:Emby.Media.Model.Types.ResolutionWithRate.Width">
            <summary>Gets the resolution width.</summary>
            <value>The resolution width.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ResolutionWithRate.Height">
            <summary>Gets the resolution height.</summary>
            <value>The resolution height.</value>
        </member>
        <member name="P:Emby.Media.Model.Types.ResolutionWithRate.FrameRate">
            <summary>Gets the frame rate in frames/second (fps).</summary>
            <value>The frame rate.</value>
        </member>
    </members>
</doc>
