define(["exports","./../modules/common/itemmanager/itemmanager.js","./../modules/common/itemmanager/baseitemcontroller.js","./../modules/common/datetime.js","./../modules/emby-apiclient/connectionmanager.js","./../modules/common/globalize.js","./scheduledtaskcontroller.js"],function(_exports,_itemmanager,_baseitemcontroller,_datetime,_connectionmanager,_globalize,_scheduledtaskcontroller){function ScheduledTaskTriggerController(){_baseitemcontroller.default.apply(this,arguments)}function getDisplayTime(ticks){var ticks=ticks/1e4,now=new Date;return now.setHours(0,0,0,0),now.setTime(now.getTime()+ticks),_datetime.default.getDisplayTime(now)}function getTaskTriggerDescription(item){var triggerType=item.TriggerType;if("DailyTrigger"===triggerType)return getDisplayTime(item.TimeOfDayTicks);if("WeeklyTrigger"!==triggerType)return"SystemEventTrigger"===triggerType&&"WakeFromSleep"===item.SystemEvent?_globalize.default.translate("OptionWakeFromSleep"):"IntervalTrigger"===triggerType?_globalize.default.translate("Every"):null;for(var triggerType=item.DayOfWeek,date=new Date;0<date.getDay();)date.setDate(date.getDate()-1);item=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"].indexOf(triggerType);return-1!==item?(0<item&&date.setDate(date.getDate()+item),_datetime.default.toLocaleDateString(date,{weekday:"long"})):triggerType}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,Object.assign(ScheduledTaskTriggerController.prototype,_baseitemcontroller.default.prototype),ScheduledTaskTriggerController.prototype.getTypeNames=function(){return["ScheduledTaskTrigger"]},ScheduledTaskTriggerController.prototype.getDisplayName=function(item,argument_1){return"DailyTrigger"===(item=item.TriggerType)?_globalize.default.translate("Daily"):"WeeklyTrigger"===item?_globalize.default.translate("Weekly"):"SystemEventTrigger"===item?_globalize.default.translate("OnEvent"):"IntervalTrigger"===item?_globalize.default.translate("OptionOnInterval"):"StartupTrigger"===item?_globalize.default.translate("OnServerStartup"):item},ScheduledTaskTriggerController.prototype.isSingleItemFetchRequired=function(typeName){return!1},ScheduledTaskTriggerController.prototype.getDefaultIcon=function(item){return"&#xe855;"},ScheduledTaskTriggerController.prototype.canDelete=function(item,user){return!0},ScheduledTaskTriggerController.prototype.enableLibraryItemDeleteConfirmation=function(){return!1},ScheduledTaskTriggerController.prototype.canRate=function(item){return!1},ScheduledTaskTriggerController.prototype.canMarkPlayed=function(item){return!1},ScheduledTaskTriggerController.prototype.canAddToPlaylist=function(item){return!1},ScheduledTaskTriggerController.prototype.canAddToCollection=function(item,user){return!1},ScheduledTaskTriggerController.prototype.canConvert=function(item,user){return!1},ScheduledTaskTriggerController.prototype.canEdit=function(items,user){return!1},ScheduledTaskTriggerController.prototype.canEditImages=function(item,user){return!1},ScheduledTaskTriggerController.prototype.canEditSubtitles=function(item,user){return!1},ScheduledTaskTriggerController.prototype.isDeletePrimaryCommand=function(itemType){return!0},ScheduledTaskTriggerController.prototype.getNameSortOption=function(itemType){return null},ScheduledTaskTriggerController.prototype.getDeleteMessages=function(){return{single:{text:"MessageDeleteTaskTrigger",title:_globalize.default.translate("HeaderDeleteTaskTrigger"),confirmText:_globalize.default.translate("Delete")},plural:{text:"MessageDeleteTaskTrigger",title:_globalize.default.translate("HeaderDeleteTaskTrigger"),confirmText:_globalize.default.translate("Delete")}}},ScheduledTaskTriggerController.prototype.canRefreshMetadata=function(item,user){return!1},ScheduledTaskTriggerController.prototype.deleteItemsInternal=function(options){var item=options.items[0],apiClient=_connectionmanager.default.getApiClient(item);return apiClient.getScheduledTask(item.ScheduledTaskId).then(function(task){return task.Triggers.splice(item.TriggerIndex,1),apiClient.updateScheduledTaskTriggers(task.Id,task.Triggers)})},ScheduledTaskTriggerController.prototype.editItems=function(items,options){return Promise.reject()},ScheduledTaskTriggerController.prototype.resolveField=function(item,field){switch(field){case"TaskTriggerTimeLimit":var hours,timeLimitText="";return item.MaxRuntimeTicks&&(timeLimitText+=1==(hours=item.MaxRuntimeTicks/36e9)?_globalize.default.translate("ValueTimeLimitSingleHour"):_globalize.default.translate("ValueTimeLimitMultiHour",hours)),timeLimitText;case"TaskTriggerDescription":return getTaskTriggerDescription(item);case"TaskTriggerDescription2":return function(item){var triggerType=item.TriggerType;return"WeeklyTrigger"===triggerType?getDisplayTime(item.TimeOfDayTicks):"IntervalTrigger"===triggerType?_scheduledtaskcontroller.default.getDurationDisplay(item.IntervalTicks):null}(item);default:return _baseitemcontroller.default.prototype.resolveField.apply(this,arguments)}};var instance=new ScheduledTaskTriggerController;_itemmanager.default.registerItemController(instance),_exports.default=instance});