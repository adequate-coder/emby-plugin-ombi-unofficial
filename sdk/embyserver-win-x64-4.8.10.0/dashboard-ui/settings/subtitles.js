define(["exports","./../modules/viewmanager/basesettingsview.js","./../modules/loading/loading.js","./../modules/common/globalize.js","./../modules/emby-elements/emby-scroller/emby-scroller.js","./../modules/emby-elements/emby-select/emby-select.js","./../modules/emby-elements/emby-button/emby-button.js","./../modules/emby-elements/emby-input/emby-input.js","./../modules/emby-elements/emby-checkbox/emby-checkbox.js","./../modules/emby-apiclient/connectionmanager.js","./../modules/common/usersettings/usersettings.js","./../modules/common/usersettings/usersettingsbuilder.js","./../modules/common/subtitleappearancehelper.js"],function(_exports,_basesettingsview,_loading,_globalize,_embyScroller,_embySelect,_embyButton,_embyInput,_embyCheckbox,_connectionmanager,_usersettings,_usersettingsbuilder,_subtitleappearancehelper){function numberToPercentString(value){try{return new Intl.NumberFormat(_globalize.default.getCurrentLocales(),{style:"percent"}).format(value/100)}catch(err){return console.log("Error in NumberFormat: "+err),value+"%"}}function loadForm(context){var options,context=context.querySelector(".selectVerticalPosition");context=context,(options=[{name:numberToPercentString(90),value:90},{name:numberToPercentString(80),value:80},{name:numberToPercentString(70),value:70},{name:numberToPercentString(60),value:60},{name:numberToPercentString(50),value:50},{name:numberToPercentString(40),value:40},{name:numberToPercentString(30),value:30},{name:numberToPercentString(20),value:20},{name:numberToPercentString(10),value:10},{name:_globalize.default.translate("Bottom"),value:0}]).reverse(),context.innerHTML=options.map(function(o){return'<option value="'+o.value+'">'+o.name+"</option>"}).join(""),_loading.default.hide()}function onTrackSelectionsCleared(){_loading.default.hide()}function onClearSavedTrackSelectionsClick(e){var options=this,mode=e.target.closest("button").getAttribute("data-mode");return function(options){return Emby.importModule("./modules/common/dialogs/confirm.js").then(function(confirm){return confirm(options)})}({title:_globalize.default.translate("HeaderClearTrackSelections"),text:_globalize.default.translate("QuestionClearSavedTracks"),confirmText:_globalize.default.translate("HeaderClearTrackSelections"),primary:"cancel"}).then(function(){return _loading.default.show(),_connectionmanager.default.getApiClient(options.serverId).clearUserTrackSelections(options.userId,mode).then(onTrackSelectionsCleared,onTrackSelectionsCleared)})}function View(view,params){_basesettingsview.default.apply(this,arguments);var apiClient=_connectionmanager.default.getApiClient(params.serverId),userId=params.userId||apiClient.getCurrentUserId(),userSettings=userId===apiClient.getCurrentUserId()?_usersettings.default:new _usersettingsbuilder.default,userId={serverId:apiClient.serverId(),userId:userId,element:view.querySelector(".settingsContainer"),userSettings:userSettings};(this.settingsOptions=userId).element.classList.add("subtitlesettings"),function(view,apiClient){var html="",html=(html=(html+='<option value="Default" data-description="'+_globalize.default.translate("DefaultSubtitlesHelp")+'">'+_globalize.default.translate("Default")+"</option>")+('<option value="Smart" data-description="'+_globalize.default.translate("SmartSubtitlesHelp")+'">'+_globalize.default.translate("Smart")+"</option>"))+('<option value="OnlyForced" data-description="'+_globalize.default.translate("OnlyForcedSubtitlesHelp")+'">'+_globalize.default.translate("OnlyForcedSubtitles")+"</option>");apiClient.isMinServerVersion("4.8.0.67")&&(html+='<option value="HearingImpaired" data-description="'+_globalize.default.translate("AutoSelectHearingImpairedHelp")+'">'+_globalize.default.translate("HearingImpaired")+"</option>"),html=(html+='<option value="Always" data-description="'+_globalize.default.translate("AlwaysPlaySubtitlesHelp")+'">'+_globalize.default.translate("AlwaysPlaySubtitles")+"</option>")+'<option value="None" data-description="'+_globalize.default.translate("NoSubtitlesHelp")+'">'+_globalize.default.translate("NoSubtitles")+"</option>",view.querySelector(".selectSubtitlePlaybackMode").innerHTML=html}(userId.element,apiClient),userId.element.querySelector("form").addEventListener("submit",function(e){return e.preventDefault(),!1}.bind(userId)),view.addEventListener("change",function(e){var view=e.target.closest(".subtitlesettings"),elements={window:view.querySelector(".subtitleappearance-preview-window"),text:view.querySelector(".subtitleappearance-preview-text")},appearanceSettings=this.settingsOptions.userSettings.getSubtitleAppearanceSettings();_subtitleappearancehelper.default.applyStyles(elements,appearanceSettings),(elements=e.target.closest(".selectBackgroundColor"))&&("transparent"===elements.value?view.querySelector(".fldBackgroundOpacity").classList.add("hide"):view.querySelector(".fldBackgroundOpacity").classList.remove("hide"))}.bind(this)),userId.element.querySelector(".btnClearTrackSelections").addEventListener("click",onClearSavedTrackSelectionsClick.bind(userId)),userId.element.querySelector(".selectSubtitleLanguage").getItems=function(query){var apiClient=_connectionmanager.default.getApiClient(this.settingsOptions.serverId),instance=this;return apiClient.getCultures().then(function(cultures){var selectedValues=instance.settingsOptions.element.querySelector(".selectSubtitleLanguage").values;Array.isArray(selectedValues)||(selectedValues=null!=(_selectedValues=selectedValues)&&_selectedValues.split?selectedValues.split(","):[]);(items=cultures.map(function(c){return{Name:c.DisplayName,Id:c.TwoLetterISOLanguageName,Type:"GenericListItem",CanReorder:-1!==selectedValues.indexOf(c.TwoLetterISOLanguageName)&&1<selectedValues.length}})).sort(function(a,b){a=selectedValues.indexOf(a.Id),b=selectedValues.indexOf(b.Id);return(a=a<0?items.length:a)===(b=b<0?items.length:b)?0:a<b?-1:1});var _selectedValues=items.length,items=items.slice(query.StartIndex||0);return null!=query.Limit&&items.length>query.Limit&&(items.length=Math.min(items.length,query.Limit)),{TotalRecordCount:_selectedValues,Items:items}})}.bind(this)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,require(["css!settings/subtitles.css"]),Object.assign(View.prototype,_basesettingsview.default.prototype),View.prototype.loadSettingsInternal=function(){var options,context,userId,apiClient,userSettings,instance=this;return options=instance.settingsOptions,context=options.element,_loading.default.show(),userId=options.userId,apiClient=_connectionmanager.default.getApiClient(options.serverId),userSettings=options.userSettings,apiClient.getUser(userId).then(function(user){return options.user=user,(userId===apiClient.getCurrentUserId()?Promise.resolve():userSettings.setUserInfo(userId,apiClient)).then(function(){userSettings.getSubtitleAppearanceSettings();return loadForm(context)})}).then(function(){return instance.loadAutoSettings()})},View.prototype.getAutoSettingsObjectsPromises=function(){var options,list=_basesettingsview.default.prototype.getAutoSettingsObjectsPromises.apply(this,arguments);return list.push((options=this.settingsOptions,Promise.resolve({key:"userconfiguration",value:options.user.Configuration}))),list},View.prototype.getNamedSettingsOwner=function(owner){switch(owner){case"usersettings":return this.settingsOptions.userSettings;case"userconfiguration":return this.settingsOptions.user.Configuration;default:return _basesettingsview.default.prototype.getNamedSettingsOwner.apply(this,arguments)}},View.prototype.getUserConfigurationUserId=function(){return this.settingsOptions.userId},View.prototype.destroy=function(){_basesettingsview.default.prototype.destroy.apply(this,arguments),this.settingsOptions=null};_exports.default=View});