define(["exports","./../emby-apiclient/connectionmanager.js","./../common/globalize.js","./../loading/loading.js","./../emby-apiclient/events.js","./../emby-elements/emby-button/emby-button.js","./../emby-elements/emby-button/paper-icon-button-light.js","./../common/recordinghelper.js","./../common/input/api.js"],function(_exports,_connectionmanager,_globalize,_loading,_events,_embyButton,_paperIconButtonLight,_recordinghelper,_api){function onDataFetched(item){var btnManageSeriesRecording,options=this.options;options.program=item,options=options.parent,(item=item).IsSeries?(options.querySelector(".seriesRecordingButton").classList.remove("hide"),options.querySelector(".btnManageSeriesRecording").classList.remove("hide")):(options.querySelector(".seriesRecordingButton").classList.add("hide"),options.querySelector(".btnManageSeriesRecording").classList.add("hide")),btnManageSeriesRecording=options.querySelector(".btnManageSeriesRecording"),item.SeriesTimerId?(btnManageSeriesRecording&&btnManageSeriesRecording.classList.remove("hide"),options.querySelector(".seriesRecordingButton .recordingIcon").classList.add("recordingIcon-active"),options.querySelector(".seriesRecordingButtonText").innerHTML=_globalize.default.translate("HeaderCancelSeries")):(btnManageSeriesRecording&&btnManageSeriesRecording.classList.add("hide"),options.querySelector(".seriesRecordingButton .recordingIcon").classList.remove("recordingIcon-active"),options.querySelector(".seriesRecordingButtonText").innerHTML=_globalize.default.translate("HeaderRecordSeries")),item.TimerId&&"Cancelled"!==item.Status?(options.querySelector(".btnManageRecording").classList.remove("hide"),options.querySelector(".singleRecordingButton .recordingIcon").classList.add("recordingIcon-active"),"InProgress"===item.Status?options.querySelector(".singleRecordingButtonText").innerHTML=_globalize.default.translate("HeaderStopRecording"):options.querySelector(".singleRecordingButtonText").innerHTML=_globalize.default.translate("HeaderDoNotRecord")):(options.querySelector(".btnManageRecording").classList.add("hide"),options.querySelector(".singleRecordingButton .recordingIcon").classList.remove("recordingIcon-active"),options.querySelector(".singleRecordingButtonText").innerHTML=_globalize.default.translate("Record"))}function RecordingEditor(options){this.options=options,this.embed();options=function(e,apiClient,data){var options=this.options,refresh=!1;data.Id&&options.program.TimerId===data.Id&&(refresh=!0),(refresh=data.ProgramId&&options&&options.program.Id===data.ProgramId?!0:refresh)&&_events.default.trigger(this,"recordingchanged")}.bind(this),this.timerChangedHandler=options,_events.default.on(_api.default,"TimerCreated",options),_events.default.on(_api.default,"TimerCancelled",options),options=function(e,apiClient,data){var options=this.options,refresh=!1;data.Id&&options.program.SeriesTimerId===data.Id&&(refresh=!0),(refresh=data.ProgramId&&options&&options.program.Id===data.ProgramId?!0:refresh)&&_events.default.trigger(this,"recordingchanged")}.bind(this);this.seriesTimerChangedHandler=options,_events.default.on(_api.default,"SeriesTimerCreated",options),_events.default.on(_api.default,"SeriesTimerCancelled",options)}function onRecordSeriesChange(e){this.changed=!0;var self=this,options=this.options,apiClient=_connectionmanager.default.getApiClient(options.program);!e.target.closest("BUTTON").querySelector("i").classList.contains("recordingIcon-active")?(options.parent.querySelector(".seriesRecordingButton").classList.remove("hide"),options.parent.querySelector(".btnManageSeriesRecording").classList.remove("hide"),options.program.SeriesTimerId||(e=options.program.TimerId?_recordinghelper.default.changeRecordingToSeries(apiClient,options.program.TimerId,options.program.Id):_recordinghelper.default.createRecording(apiClient,options.program.Id,!0),_loading.default.show(),e.then(function(){_events.default.trigger(self,"seriesrecordingchanged")}))):options.program.SeriesTimerId&&(_loading.default.show(),apiClient.cancelLiveTvSeriesTimer(options.program.SeriesTimerId).then(function(){var options;options=_globalize.default.translate("RecordingCancelled"),Emby.importModule("./modules/toast/toast.js").then(function(toast){return toast(options)}),_events.default.trigger(self,"seriesrecordingchanged")}))}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,require(["flexStyles"]),RecordingEditor.prototype.embed=function(){var options=this.options,context=options.parent,singleRecordingButton=context.querySelector(".singleRecordingButton");options.program.AsSeries||singleRecordingButton.classList.remove("hide"),singleRecordingButton.addEventListener("click",function(e){this.changed=!0;var self=this,options=this.options,apiClient=_connectionmanager.default.getApiClient(options.program),e=!e.target.closest("BUTTON").querySelector("i").classList.contains("recordingIcon-active"),hasEnabledTimer=options.program.TimerId&&"Cancelled"!==options.program.Status;e?hasEnabledTimer||(_loading.default.show(),_recordinghelper.default.createRecording(apiClient,options.program.Id,!1).then(function(){_events.default.trigger(self,"recordingchanged")})):hasEnabledTimer&&_recordinghelper.default.cancelTimer(apiClient,options.program.TimerId,!0).then(function(){_events.default.trigger(self,"recordingchanged")})}.bind(this)),context.querySelector(".seriesRecordingButton").addEventListener("click",onRecordSeriesChange.bind(this)),onDataFetched.call(this,options.program)},RecordingEditor.prototype.hasChanged=function(){return this.changed},RecordingEditor.prototype.refresh=function(item){onDataFetched.call(this,item)},RecordingEditor.prototype.getProgram=function(){return this.options.program},RecordingEditor.prototype.destroy=function(){var timerChangedHandler=this.timerChangedHandler,timerChangedHandler=(this.timerChangedHandler=null,_events.default.off(_api.default,"TimerCreated",timerChangedHandler),_events.default.off(_api.default,"TimerCancelled",timerChangedHandler),this.seriesTimerChangedHandler);this.seriesTimerChangedHandler=null,_events.default.off(_api.default,"SeriesTimerCreated",timerChangedHandler),_events.default.off(_api.default,"SeriesTimerCancelled",timerChangedHandler)};_exports.default=RecordingEditor});