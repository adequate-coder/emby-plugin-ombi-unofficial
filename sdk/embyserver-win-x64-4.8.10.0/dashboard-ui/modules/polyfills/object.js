"function"!=typeof Object.hasOwn&&(Object.hasOwn=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}),"function"!=typeof Object.assign&&(Object.assign=function(target){if(null==target)throw new TypeError("Cannot convert undefined or null to object");for(var output=Object(target),index=1;index<arguments.length;index++){var source=arguments[index];if(null!=source)for(var nextKey in source)Object.hasOwn(source,nextKey)&&(output[nextKey]=source[nextKey])}return output}),"function"!=typeof Object.create&&(Object.create=function(){function F(){}return function(o){if(1!==arguments.length)throw new Error("Object.create shim only accepts one parameter.");return F.prototype=o,new F}}());